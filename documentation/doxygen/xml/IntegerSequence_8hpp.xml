<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="IntegerSequence_8hpp" kind="file" language="C++">
    <compoundname>IntegerSequence.hpp</compoundname>
    <includes refid="Array_8hpp" local="yes">Array.hpp</includes>
    <includedby refid="UserDomain_8hpp" local="yes">/home/alexander/develop/work/llama/include/llama/UserDomain.hpp</includedby>
    <includedby refid="Factory_8hpp" local="yes">/home/alexander/develop/work/llama/include/llama/Factory.hpp</includedby>
    <incdepgraph>
      <node id="204">
        <label>boost/predef.h</label>
      </node>
      <node id="202">
        <label>Array.hpp</label>
        <link refid="Array_8hpp"/>
        <childnode refid="203" relation="include">
        </childnode>
      </node>
      <node id="201">
        <label>/home/alexander/develop/work/llama/include/llama/IntegerSequence.hpp</label>
        <link refid="IntegerSequence_8hpp"/>
        <childnode refid="202" relation="include">
        </childnode>
      </node>
      <node id="203">
        <label>preprocessor/macros.hpp</label>
        <link refid="macros_8hpp"/>
        <childnode refid="204" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="209">
        <label>/home/alexander/develop/work/llama/include/llama/llama.hpp</label>
        <link refid="llama_8hpp"/>
      </node>
      <node id="210">
        <label>/home/alexander/develop/work/llama/include/llama/mapping/AoS.hpp</label>
        <link refid="AoS_8hpp"/>
        <childnode refid="209" relation="include">
        </childnode>
      </node>
      <node id="206">
        <label>/home/alexander/develop/work/llama/include/llama/UserDomain.hpp</label>
        <link refid="UserDomain_8hpp"/>
        <childnode refid="207" relation="include">
        </childnode>
        <childnode refid="209" relation="include">
        </childnode>
        <childnode refid="210" relation="include">
        </childnode>
        <childnode refid="211" relation="include">
        </childnode>
        <childnode refid="212" relation="include">
        </childnode>
      </node>
      <node id="211">
        <label>/home/alexander/develop/work/llama/include/llama/mapping/SoA.hpp</label>
        <link refid="SoA_8hpp"/>
        <childnode refid="209" relation="include">
        </childnode>
      </node>
      <node id="207">
        <label>/home/alexander/develop/work/llama/include/llama/mapping/One.hpp</label>
        <link refid="One_8hpp"/>
        <childnode refid="208" relation="include">
        </childnode>
        <childnode refid="209" relation="include">
        </childnode>
      </node>
      <node id="205">
        <label>/home/alexander/develop/work/llama/include/llama/IntegerSequence.hpp</label>
        <link refid="IntegerSequence_8hpp"/>
        <childnode refid="206" relation="include">
        </childnode>
        <childnode refid="208" relation="include">
        </childnode>
      </node>
      <node id="208">
        <label>/home/alexander/develop/work/llama/include/llama/Factory.hpp</label>
        <link refid="Factory_8hpp"/>
        <childnode refid="209" relation="include">
        </childnode>
      </node>
      <node id="212">
        <label>/home/alexander/develop/work/llama/include/llama/mapping/tree/Mapping.hpp</label>
        <link refid="Mapping_8hpp"/>
        <childnode refid="209" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structllama_1_1IntegerSequence" prot="public">llama::IntegerSequence</innerclass>
    <innerclass refid="structllama_1_1internal_1_1IntegerSequenceHelper" prot="public">llama::internal::IntegerSequenceHelper</innerclass>
    <innerclass refid="structllama_1_1internal_1_1IntegerSequenceHelper_3_010_00_01T__vals_8_8_8_01_4" prot="public">llama::internal::IntegerSequenceHelper&lt; 0, T_vals... &gt;</innerclass>
    <innerclass refid="structllama_1_1internal_1_1ZeroSequenceHelper" prot="public">llama::internal::ZeroSequenceHelper</innerclass>
    <innerclass refid="structllama_1_1internal_1_1ZeroSequenceHelper_3_010_00_01T__vals_8_8_8_01_4" prot="public">llama::internal::ZeroSequenceHelper&lt; 0, T_vals... &gt;</innerclass>
    <innernamespace refid="namespacellama">llama</innernamespace>
    <innernamespace refid="namespacellama_1_1internal">llama::internal</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>Copyright<sp/>2018<sp/>Alexander<sp/>Matthes</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>LLAMA.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>LLAMA<sp/>is<sp/>free<sp/>software:<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public<sp/>License<sp/>as</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>published<sp/>by<sp/>the<sp/>Free<sp/>Software<sp/>Foundation,<sp/>either<sp/>version<sp/>3<sp/>of<sp/>the</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>License,<sp/>or<sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>LLAMA<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>License<sp/>along<sp/>with<sp/>LLAMA.<sp/><sp/>If<sp/>not,<sp/>see<sp/>&lt;www.gnu.org/licenses/&gt;.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="Array_8hpp" kindref="compound">Array.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacellama" kindref="compound">llama</ref></highlight></codeline>
<codeline lineno="25"><highlight class="normal">{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;<sp/>std::size_t...<sp/>T_seq<sp/>&gt;</highlight></codeline>
<codeline lineno="28" refid="structllama_1_1IntegerSequence" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structllama_1_1IntegerSequence" kindref="compound">IntegerSequence</ref><sp/>{<sp/>};</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">internal</highlight></codeline>
<codeline lineno="31"><highlight class="normal">{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>std::size_t<sp/>T_FirstVal,</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>std::size_t...<sp/>T_vals</highlight></codeline>
<codeline lineno="36"><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="37" refid="structllama_1_1internal_1_1IntegerSequenceHelper" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structllama_1_1internal_1_1IntegerSequenceHelper" kindref="compound">IntegerSequenceHelper</ref></highlight></codeline>
<codeline lineno="38"><highlight class="normal">{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="structllama_1_1internal_1_1IntegerSequenceHelper_1af895568eac1fc4a058f3521100a74480" kindref="member">type</ref><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structllama_1_1internal_1_1IntegerSequenceHelper" kindref="compound">IntegerSequenceHelper</ref>&lt;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T_FirstVal-1,</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T_FirstVal,</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T_vals...</highlight></codeline>
<codeline lineno="43" refid="structllama_1_1internal_1_1IntegerSequenceHelper_1af895568eac1fc4a058f3521100a74480" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>&gt;<ref refid="structllama_1_1internal_1_1IntegerSequenceHelper_1af895568eac1fc4a058f3521100a74480" kindref="member">::type</ref>;</highlight></codeline>
<codeline lineno="44"><highlight class="normal">};</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/>std::size_t...<sp/>T_vals<sp/>&gt;</highlight></codeline>
<codeline lineno="47" refid="structllama_1_1internal_1_1IntegerSequenceHelper_3_010_00_01T__vals_8_8_8_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structllama_1_1internal_1_1IntegerSequenceHelper" kindref="compound">IntegerSequenceHelper</ref>&lt;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>0,</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>T_vals...</highlight></codeline>
<codeline lineno="50"><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="51"><highlight class="normal">{</highlight></codeline>
<codeline lineno="52" refid="structllama_1_1internal_1_1IntegerSequenceHelper_3_010_00_01T__vals_8_8_8_01_4_1ae41b2521a75e27edd5b513eb87cfe0cf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="structllama_1_1IntegerSequence" kindref="compound">type</ref><sp/>=<sp/><ref refid="structllama_1_1IntegerSequence" kindref="compound">IntegerSequence</ref>&lt;<sp/>0,<sp/>T_vals...&gt;;</highlight></codeline>
<codeline lineno="53"><highlight class="normal">};</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>internal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;<sp/>std::</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>T_N<sp/>&gt;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespacellama_1a8bdcf08fed3eadcfee16599a180465ec" kindref="member">MakeIntegerSequence</ref><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59" refid="namespacellama_1a8bdcf08fed3eadcfee16599a180465ec" refkind="member"><highlight class="normal"><ref refid="structllama_1_1internal_1_1IntegerSequenceHelper" kindref="compound">internal::IntegerSequenceHelper</ref>&lt;<sp/>T_N<sp/>-<sp/>1<sp/>&gt;::type;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">internal</highlight></codeline>
<codeline lineno="62"><highlight class="normal">{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>std::size_t<sp/>T_Iter,</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>std::size_t...<sp/>T_vals</highlight></codeline>
<codeline lineno="67"><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="68" refid="structllama_1_1internal_1_1ZeroSequenceHelper" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structllama_1_1internal_1_1ZeroSequenceHelper" kindref="compound">ZeroSequenceHelper</ref></highlight></codeline>
<codeline lineno="69"><highlight class="normal">{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="structllama_1_1internal_1_1ZeroSequenceHelper_1accaba4297d72e3ae599b7d78e04696b8" kindref="member">type</ref><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structllama_1_1internal_1_1ZeroSequenceHelper" kindref="compound">ZeroSequenceHelper</ref>&lt;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T_Iter-1,</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T_vals...</highlight></codeline>
<codeline lineno="74" refid="structllama_1_1internal_1_1ZeroSequenceHelper_1accaba4297d72e3ae599b7d78e04696b8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>&gt;::type;</highlight></codeline>
<codeline lineno="75"><highlight class="normal">};</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/>std::size_t...<sp/>T_vals<sp/>&gt;</highlight></codeline>
<codeline lineno="78" refid="structllama_1_1internal_1_1ZeroSequenceHelper_3_010_00_01T__vals_8_8_8_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structllama_1_1internal_1_1ZeroSequenceHelper" kindref="compound">ZeroSequenceHelper</ref>&lt;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>0,</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>T_vals...</highlight></codeline>
<codeline lineno="81"><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="82"><highlight class="normal">{</highlight></codeline>
<codeline lineno="83" refid="structllama_1_1internal_1_1ZeroSequenceHelper_3_010_00_01T__vals_8_8_8_01_4_1acd2bb813570b04c13d61cc45e80c7af2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="structllama_1_1IntegerSequence" kindref="compound">type</ref><sp/>=<sp/><ref refid="structllama_1_1IntegerSequence" kindref="compound">IntegerSequence</ref>&lt;<sp/>T_vals...&gt;;</highlight></codeline>
<codeline lineno="84"><highlight class="normal">};</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>internal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;<sp/>std::</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>T_N<sp/>&gt;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespacellama_1a607d767acccd7d568d02f2899fb1aa66" kindref="member">MakeZeroSequence</ref><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91" refid="namespacellama_1a607d767acccd7d568d02f2899fb1aa66" refkind="member"><highlight class="normal"><ref refid="structllama_1_1internal_1_1ZeroSequenceHelper_1accaba4297d72e3ae599b7d78e04696b8" kindref="member">internal::ZeroSequenceHelper&lt; T_N &gt;::type</ref>;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>llama</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/alexander/develop/work/llama/include/llama/IntegerSequence.hpp"/>
  </compounddef>
</doxygen>
