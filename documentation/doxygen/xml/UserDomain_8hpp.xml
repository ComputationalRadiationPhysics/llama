<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="UserDomain_8hpp" kind="file" language="C++">
    <compoundname>UserDomain.hpp</compoundname>
    <includes refid="Types_8hpp" local="yes">Types.hpp</includes>
    <includes refid="IntegerSequence_8hpp" local="yes">IntegerSequence.hpp</includes>
    <includedby refid="One_8hpp" local="yes">/home/alexander/develop/work/llama/include/llama/mapping/One.hpp</includedby>
    <includedby refid="llama_8hpp" local="yes">/home/alexander/develop/work/llama/include/llama/llama.hpp</includedby>
    <includedby refid="AoS_8hpp" local="yes">/home/alexander/develop/work/llama/include/llama/mapping/AoS.hpp</includedby>
    <includedby refid="SoA_8hpp" local="yes">/home/alexander/develop/work/llama/include/llama/mapping/SoA.hpp</includedby>
    <includedby refid="Mapping_8hpp" local="yes">/home/alexander/develop/work/llama/include/llama/mapping/tree/Mapping.hpp</includedby>
    <incdepgraph>
      <node id="585">
        <label>boost/predef.h</label>
      </node>
      <node id="582">
        <label>Types.hpp</label>
        <link refid="Types_8hpp"/>
        <childnode refid="583" relation="include">
        </childnode>
        <childnode refid="586" relation="include">
        </childnode>
      </node>
      <node id="583">
        <label>Array.hpp</label>
        <link refid="Array_8hpp"/>
        <childnode refid="584" relation="include">
        </childnode>
      </node>
      <node id="581">
        <label>/home/alexander/develop/work/llama/include/llama/UserDomain.hpp</label>
        <link refid="UserDomain_8hpp"/>
        <childnode refid="582" relation="include">
        </childnode>
        <childnode refid="587" relation="include">
        </childnode>
      </node>
      <node id="587">
        <label>IntegerSequence.hpp</label>
        <link refid="IntegerSequence_8hpp"/>
        <childnode refid="583" relation="include">
        </childnode>
      </node>
      <node id="584">
        <label>preprocessor/macros.hpp</label>
        <link refid="macros_8hpp"/>
        <childnode refid="585" relation="include">
        </childnode>
      </node>
      <node id="586">
        <label>boost/mp11.hpp</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="591">
        <label>/home/alexander/develop/work/llama/include/llama/llama.hpp</label>
        <link refid="llama_8hpp"/>
      </node>
      <node id="592">
        <label>/home/alexander/develop/work/llama/include/llama/mapping/AoS.hpp</label>
        <link refid="AoS_8hpp"/>
        <childnode refid="591" relation="include">
        </childnode>
      </node>
      <node id="588">
        <label>/home/alexander/develop/work/llama/include/llama/UserDomain.hpp</label>
        <link refid="UserDomain_8hpp"/>
        <childnode refid="589" relation="include">
        </childnode>
        <childnode refid="591" relation="include">
        </childnode>
        <childnode refid="592" relation="include">
        </childnode>
        <childnode refid="593" relation="include">
        </childnode>
        <childnode refid="594" relation="include">
        </childnode>
      </node>
      <node id="593">
        <label>/home/alexander/develop/work/llama/include/llama/mapping/SoA.hpp</label>
        <link refid="SoA_8hpp"/>
        <childnode refid="591" relation="include">
        </childnode>
      </node>
      <node id="589">
        <label>/home/alexander/develop/work/llama/include/llama/mapping/One.hpp</label>
        <link refid="One_8hpp"/>
        <childnode refid="590" relation="include">
        </childnode>
        <childnode refid="591" relation="include">
        </childnode>
      </node>
      <node id="590">
        <label>/home/alexander/develop/work/llama/include/llama/Factory.hpp</label>
        <link refid="Factory_8hpp"/>
        <childnode refid="591" relation="include">
        </childnode>
      </node>
      <node id="594">
        <label>/home/alexander/develop/work/llama/include/llama/mapping/tree/Mapping.hpp</label>
        <link refid="Mapping_8hpp"/>
        <childnode refid="591" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structllama_1_1ExtentUserDomainAdress" prot="public">llama::ExtentUserDomainAdress</innerclass>
    <innerclass refid="structllama_1_1ExtentUserDomainAdress_3_011_01_4" prot="public">llama::ExtentUserDomainAdress&lt; 1 &gt;</innerclass>
    <innerclass refid="structllama_1_1LinearizeUserDomainAdress" prot="public">llama::LinearizeUserDomainAdress</innerclass>
    <innerclass refid="structllama_1_1LinearizeUserDomainAdress_3_01T__dim_00_011_01_4" prot="public">llama::LinearizeUserDomainAdress&lt; T_dim, 1 &gt;</innerclass>
    <innerclass refid="structllama_1_1LinearizeUserDomainAdressLikeFortran" prot="public">llama::LinearizeUserDomainAdressLikeFortran</innerclass>
    <innerclass refid="structllama_1_1LinearizeUserDomainAdressLikeFortran_3_011_01_4" prot="public">llama::LinearizeUserDomainAdressLikeFortran&lt; 1 &gt;</innerclass>
    <innernamespace refid="namespacellama">llama</innernamespace>
    <innernamespace refid="namespacellama_1_1internal">llama::internal</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>Copyright<sp/>2018<sp/>Alexander<sp/>Matthes</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>LLAMA.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>LLAMA<sp/>is<sp/>free<sp/>software:<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public<sp/>License<sp/>as</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>published<sp/>by<sp/>the<sp/>Free<sp/>Software<sp/>Foundation,<sp/>either<sp/>version<sp/>3<sp/>of<sp/>the</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>License,<sp/>or<sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>LLAMA<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>License<sp/>along<sp/>with<sp/>LLAMA.<sp/><sp/>If<sp/>not,<sp/>see<sp/>&lt;www.gnu.org/licenses/&gt;.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="Types_8hpp" kindref="compound">Types.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="IntegerSequence_8hpp" kindref="compound">IntegerSequence.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacellama" kindref="compound">llama</ref></highlight></codeline>
<codeline lineno="25"><highlight class="normal">{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="keyword">template</highlight><highlight class="normal">&lt;<sp/>std::</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>T_dim<sp/>&gt;</highlight></codeline>
<codeline lineno="29" refid="structllama_1_1ExtentUserDomainAdress" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structllama_1_1ExtentUserDomainAdress" kindref="compound">ExtentUserDomainAdress</ref></highlight></codeline>
<codeline lineno="30"><highlight class="normal">{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="macros_8hpp_1adad0b5fb27fb373cb41c47ed7ab419af" kindref="member">LLAMA_FN_HOST_ACC_INLINE</ref></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37" refid="structllama_1_1ExtentUserDomainAdress_1a2b9b9973a86facf275e7782fbb92bb57" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structllama_1_1ExtentUserDomainAdress_1a2b9b9973a86facf275e7782fbb92bb57" kindref="member">operator()</ref>(<sp/><ref refid="structllama_1_1Array" kindref="compound">UserDomain&lt; T_dim &gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>size<sp/>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>-&gt;<sp/>std::size_t</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structllama_1_1ExtentUserDomainAdress" kindref="compound">ExtentUserDomainAdress</ref>&lt;<sp/>T_dim<sp/>-<sp/>1<sp/>&gt;()(<sp/>size.pop_front()<sp/>)</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>size[<sp/>0<sp/>];</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="43"><highlight class="normal">};</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;<sp/>&gt;</highlight></codeline>
<codeline lineno="46" refid="structllama_1_1ExtentUserDomainAdress_3_011_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structllama_1_1ExtentUserDomainAdress" kindref="compound">ExtentUserDomainAdress</ref>&lt;<sp/>1<sp/>&gt;</highlight></codeline>
<codeline lineno="47"><highlight class="normal">{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="macros_8hpp_1adad0b5fb27fb373cb41c47ed7ab419af" kindref="member">LLAMA_FN_HOST_ACC_INLINE</ref></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50" refid="structllama_1_1ExtentUserDomainAdress_3_011_01_4_1a2dfa8d6bae1d6e4d22fe74d08ea3ce63" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structllama_1_1ExtentUserDomainAdress_3_011_01_4_1a2dfa8d6bae1d6e4d22fe74d08ea3ce63" kindref="member">operator()</ref>(<sp/><ref refid="structllama_1_1Array" kindref="compound">UserDomain&lt; 1 &gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>size<sp/>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>-&gt;<sp/>std::size_t</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>size[<sp/>0<sp/>];</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="55"><highlight class="normal">};</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>std::size_t<sp/>T_dim,</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>std::size_t<sp/>T_it<sp/>=<sp/>T_dim</highlight></codeline>
<codeline lineno="67"><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="68" refid="structllama_1_1LinearizeUserDomainAdress" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structllama_1_1LinearizeUserDomainAdress" kindref="compound">LinearizeUserDomainAdress</ref></highlight></codeline>
<codeline lineno="69"><highlight class="normal">{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="macros_8hpp_1adad0b5fb27fb373cb41c47ed7ab419af" kindref="member">LLAMA_FN_HOST_ACC_INLINE</ref></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77" refid="structllama_1_1LinearizeUserDomainAdress_1a90d88ec82946a51c2cb7457f6a113733" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structllama_1_1LinearizeUserDomainAdress_1a90d88ec82946a51c2cb7457f6a113733" kindref="member">operator()</ref>(</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structllama_1_1Array" kindref="compound">UserDomain&lt; T_dim &gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>coord,</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structllama_1_1Array" kindref="compound">UserDomain&lt; T_dim &gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>size</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>-&gt;<sp/>std::size_t</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>coord[<sp/>T_it<sp/>-<sp/>1<sp/>]</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/><ref refid="structllama_1_1LinearizeUserDomainAdress" kindref="compound">LinearizeUserDomainAdress</ref>&lt;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T_dim,</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T_it<sp/>-<sp/>1</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;()(</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coord,</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>size[<sp/>T_it<sp/>-<sp/>1<sp/>];</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="93"><highlight class="normal">};</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;<sp/>std::</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>T_dim<sp/>&gt;</highlight></codeline>
<codeline lineno="96" refid="structllama_1_1LinearizeUserDomainAdress_3_01T__dim_00_011_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structllama_1_1LinearizeUserDomainAdress" kindref="compound">LinearizeUserDomainAdress</ref>&lt;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>T_dim,</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>1</highlight></codeline>
<codeline lineno="99"><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="100"><highlight class="normal">{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="macros_8hpp_1adad0b5fb27fb373cb41c47ed7ab419af" kindref="member">LLAMA_FN_HOST_ACC_INLINE</ref></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103" refid="structllama_1_1LinearizeUserDomainAdress_3_01T__dim_00_011_01_4_1a509195170728ab62363caaebabc6e1a9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structllama_1_1LinearizeUserDomainAdress_3_01T__dim_00_011_01_4_1a509195170728ab62363caaebabc6e1a9" kindref="member">operator()</ref>(</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structllama_1_1Array" kindref="compound">UserDomain&lt; T_dim &gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>coord,</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structllama_1_1Array" kindref="compound">UserDomain&lt; T_dim &gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>size</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>-&gt;<sp/>std::size_t</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>coord[<sp/>0<sp/>];</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="111"><highlight class="normal">};</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="keyword">template</highlight><highlight class="normal">&lt;<sp/>std::</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>T_dim<sp/>&gt;</highlight></codeline>
<codeline lineno="121" refid="structllama_1_1LinearizeUserDomainAdressLikeFortran" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structllama_1_1LinearizeUserDomainAdressLikeFortran" kindref="compound">LinearizeUserDomainAdressLikeFortran</ref></highlight></codeline>
<codeline lineno="122"><highlight class="normal">{<sp/><sp/><sp/><sp/><ref refid="macros_8hpp_1adad0b5fb27fb373cb41c47ed7ab419af" kindref="member">LLAMA_FN_HOST_ACC_INLINE</ref></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129" refid="structllama_1_1LinearizeUserDomainAdressLikeFortran_1a09b6d963cd24a85d64c28f209c40323e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structllama_1_1LinearizeUserDomainAdressLikeFortran_1a09b6d963cd24a85d64c28f209c40323e" kindref="member">operator()</ref>(</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structllama_1_1Array" kindref="compound">UserDomain&lt; T_dim &gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>coord,</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structllama_1_1Array" kindref="compound">UserDomain&lt; T_dim &gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>size</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>-&gt;<sp/>std::size_t</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>coord[<sp/>0<sp/>]</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/><ref refid="structllama_1_1LinearizeUserDomainAdressLikeFortran" kindref="compound">LinearizeUserDomainAdressLikeFortran</ref>&lt;<sp/>T_dim<sp/>-<sp/>1<sp/>&gt;()(</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coord.pop_front(),</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size.pop_front()</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>size[<sp/>0<sp/>];</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="142"><highlight class="normal">};</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;<sp/>&gt;</highlight></codeline>
<codeline lineno="145" refid="structllama_1_1LinearizeUserDomainAdressLikeFortran_3_011_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structllama_1_1LinearizeUserDomainAdressLikeFortran" kindref="compound">LinearizeUserDomainAdressLikeFortran</ref>&lt;<sp/>1<sp/>&gt;</highlight></codeline>
<codeline lineno="146"><highlight class="normal">{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="macros_8hpp_1adad0b5fb27fb373cb41c47ed7ab419af" kindref="member">LLAMA_FN_HOST_ACC_INLINE</ref></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149" refid="structllama_1_1LinearizeUserDomainAdressLikeFortran_3_011_01_4_1a0e601b5e7c0faffbc10f00769d78f4d0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structllama_1_1LinearizeUserDomainAdressLikeFortran_3_011_01_4_1a0e601b5e7c0faffbc10f00769d78f4d0" kindref="member">operator()</ref>(</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structllama_1_1Array" kindref="compound">UserDomain&lt; 1 &gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>coord,</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structllama_1_1Array" kindref="compound">UserDomain&lt; 1 &gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>size</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>-&gt;<sp/>std::size_t</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>coord[<sp/>0<sp/>];</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="157"><highlight class="normal">};</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">internal</highlight></codeline>
<codeline lineno="160"><highlight class="normal">{</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>std::size_t...<sp/>T_dims</highlight></codeline>
<codeline lineno="164"><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><ref refid="macros_8hpp_1adad0b5fb27fb373cb41c47ed7ab419af" kindref="member">LLAMA_FN_HOST_ACC_INLINE</ref></highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167" refid="namespacellama_1_1internal_1a3b3f224e134a2c1c5151bef7e00c94dd" refkind="member"><highlight class="normal"><ref refid="namespacellama_1_1internal_1a3b3f224e134a2c1c5151bef7e00c94dd" kindref="member">userDomainZeroHelper</ref>(<sp/><ref refid="structllama_1_1IntegerSequence" kindref="compound">IntegerSequence&lt; T_dims... &gt;</ref><sp/>)</highlight></codeline>
<codeline lineno="168"><highlight class="normal">-&gt;<sp/><ref refid="structllama_1_1Array" kindref="compound">UserDomain</ref>&lt;<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">...(<sp/>T_dims<sp/>)<sp/>&gt;</highlight></codeline>
<codeline lineno="169"><highlight class="normal">{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structllama_1_1Array" kindref="compound">UserDomain</ref>&lt;<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">...(<sp/>T_dims<sp/>)<sp/>&gt;{<sp/>T_dims...<sp/>};</highlight></codeline>
<codeline lineno="171"><highlight class="normal">}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>internal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="keyword">template</highlight><highlight class="normal">&lt;<sp/>std::</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>T_dim<sp/>&gt;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><ref refid="macros_8hpp_1adad0b5fb27fb373cb41c47ed7ab419af" kindref="member">LLAMA_FN_HOST_ACC_INLINE</ref></highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182" refid="namespacellama_1aa8b49851209fef972feb72ca58cdffae" refkind="member"><highlight class="normal"><ref refid="namespacellama_1aa8b49851209fef972feb72ca58cdffae" kindref="member">userDomainZero</ref>()</highlight></codeline>
<codeline lineno="183"><highlight class="normal">-&gt;<sp/><ref refid="structllama_1_1Array" kindref="compound">UserDomain&lt; T_dim &gt;</ref></highlight></codeline>
<codeline lineno="184"><highlight class="normal">{</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacellama_1_1internal_1a3b3f224e134a2c1c5151bef7e00c94dd" kindref="member">internal::userDomainZeroHelper</ref>(<sp/><ref refid="namespacellama_1a607d767acccd7d568d02f2899fb1aa66" kindref="member">MakeZeroSequence&lt; T_dim &gt;</ref>{<sp/>}<sp/>);</highlight></codeline>
<codeline lineno="186"><highlight class="normal">}</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>llama</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/alexander/develop/work/llama/include/llama/UserDomain.hpp"/>
  </compounddef>
</doxygen>
