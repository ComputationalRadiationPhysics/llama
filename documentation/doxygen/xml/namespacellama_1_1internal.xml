<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="namespacellama_1_1internal" kind="namespace" language="C++">
    <compoundname>llama::internal</compoundname>
    <innerclass refid="structllama_1_1internal_1_1ApplyFunctorForDatumDomainImpl" prot="public">llama::internal::ApplyFunctorForDatumDomainImpl</innerclass>
    <innerclass refid="structllama_1_1internal_1_1ApplyFunctorForDatumDomainImpl_3_01T__Coord_00_01T__Pos_00_01T__Funct0dcfe159b3fed89a48111ab8c364fd46" prot="public">llama::internal::ApplyFunctorForDatumDomainImpl&lt; T_Coord, T_Pos, T_Functor, DatumStruct&lt; T_Leaves... &gt;&gt;</innerclass>
    <innerclass refid="structllama_1_1internal_1_1ApplyFunctorForEachLeaf" prot="public">llama::internal::ApplyFunctorForEachLeaf</innerclass>
    <innerclass refid="structllama_1_1internal_1_1ApplyFunctorForEachLeaf_3_01DatumStruct_3_01T__Leaves_8_8_8_01_4_00_0873e5c33522256754320ecd22003f239" prot="public">llama::internal::ApplyFunctorForEachLeaf&lt; DatumStruct&lt; T_Leaves... &gt;, T_DatumCoord, T_Functor &gt;</innerclass>
    <innerclass refid="structllama_1_1internal_1_1ApplyFunctorForEachLeafImpl" prot="public">llama::internal::ApplyFunctorForEachLeafImpl</innerclass>
    <innerclass refid="structllama_1_1internal_1_1ApplyFunctorForEachLeafImpl_3_01T__Coord_00_01T__Pos_00_01T__Functor_01_4" prot="public">llama::internal::ApplyFunctorForEachLeafImpl&lt; T_Coord, T_Pos, T_Functor &gt;</innerclass>
    <innerclass refid="structllama_1_1internal_1_1ApplyFunctorForEachLeafImpl_3_01T__Coord_00_01T__Pos_00_01T__Functor_2bff3420f90301fe4c70a3afab1b82d1" prot="public">llama::internal::ApplyFunctorForEachLeafImpl&lt; T_Coord, T_Pos, T_Functor, T_Leaf, T_Leaves... &gt;</innerclass>
    <innerclass refid="structllama_1_1internal_1_1ApplyFunctorIfCoordIsIncluded" prot="public">llama::internal::ApplyFunctorIfCoordIsIncluded</innerclass>
    <innerclass refid="structllama_1_1internal_1_1ApplyFunctorIfCoordIsIncluded_3_01T__Coord_00_01T__Pos_00_01T__Functo8178b759a940c008334ad4f19e3e5b46" prot="public">llama::internal::ApplyFunctorIfCoordIsIncluded&lt; T_Coord, T_Pos, T_Functor, typename std::enable_if&lt; CoordIsIncluded&lt; T_Pos, T_Coord &gt;::value &gt;::type &gt;</innerclass>
    <innerclass refid="structllama_1_1internal_1_1CoordIsIncluded" prot="public">llama::internal::CoordIsIncluded</innerclass>
    <innerclass refid="structllama_1_1internal_1_1CoordIsIncluded_3_01T__Pos_00_01T__Coord_00_01typename_01std_1_1enable7f0177eec7aaf3f9a26fe9c8ed89548" prot="public">llama::internal::CoordIsIncluded&lt; T_Pos, T_Coord, typename std::enable_if&lt;(T_Pos::size&lt; T_Coord::size) &gt;::type &gt;</innerclass>
    <innerclass refid="structllama_1_1internal_1_1GetCoordFromUIDImpl" prot="public">llama::internal::GetCoordFromUIDImpl</innerclass>
    <innerclass refid="structllama_1_1internal_1_1GetCoordFromUIDImpl_3_01T__DatumDomain_00_01T__DatumCoord_00_01T__posdbb55aaccff22d6a4c9d108b6b1d84bf" prot="public">llama::internal::GetCoordFromUIDImpl&lt; T_DatumDomain, T_DatumCoord, T_pos, typename std::enable_if&lt; !std::is_same&lt; T_FirstUID, GetDatumElementUID&lt; boost::mp11::mp_first&lt; T_DatumDomain &gt; &gt; &gt;::value &gt;::type, T_FirstUID, T_UID... &gt;</innerclass>
    <innerclass refid="structllama_1_1internal_1_1GetCoordFromUIDImpl_3_01T__DatumDomain_00_01T__DatumCoord_00_01T__pos42aa3c321c620142ac61091bca4cc194" prot="public">llama::internal::GetCoordFromUIDImpl&lt; T_DatumDomain, T_DatumCoord, T_pos, typename std::enable_if&lt; std::is_same&lt; T_FirstUID, GetDatumElementUID&lt; boost::mp11::mp_first&lt; T_DatumDomain &gt; &gt; &gt;::value &gt;::type, T_FirstUID, T_UID... &gt;</innerclass>
    <innerclass refid="structllama_1_1internal_1_1GetCoordFromUIDImpl_3_01T__DatumDomain_00_01T__DatumCoord_00_01T__pos_00_01void_01_4" prot="public">llama::internal::GetCoordFromUIDImpl&lt; T_DatumDomain, T_DatumCoord, T_pos, void &gt;</innerclass>
    <innerclass refid="structllama_1_1internal_1_1GetTypeFromDatumCoordImpl" prot="public">llama::internal::GetTypeFromDatumCoordImpl</innerclass>
    <innerclass refid="structllama_1_1internal_1_1GetTypeFromDatumCoordImpl_3_01T__DatumDomain_00_01DatumCoord_3_01T__coords_8_8_8_01_4_4" prot="public">llama::internal::GetTypeFromDatumCoordImpl&lt; T_DatumDomain, DatumCoord&lt; T_coords... &gt;&gt;</innerclass>
    <innerclass refid="structllama_1_1internal_1_1GetTypeImpl" prot="public">llama::internal::GetTypeImpl</innerclass>
    <innerclass refid="structllama_1_1internal_1_1GetTypeImpl_3_01T__DatumDomain_01_4" prot="public">llama::internal::GetTypeImpl&lt; T_DatumDomain &gt;</innerclass>
    <innerclass refid="structllama_1_1internal_1_1GetTypeImpl_3_01T__DatumDomain_00_01T__firstDatumDomainCoord_00_01T__datumDomainCoords_8_8_8_01_4" prot="public">llama::internal::GetTypeImpl&lt; T_DatumDomain, T_firstDatumDomainCoord, T_datumDomainCoords... &gt;</innerclass>
    <innerclass refid="structllama_1_1internal_1_1GetUIDfromDatumCoord" prot="public">llama::internal::GetUIDfromDatumCoord</innerclass>
    <innerclass refid="structllama_1_1internal_1_1GetUIDfromDatumCoord_3_01T__DatumElement_00_01DatumCoord_3_01T__datumDomainCoords_8_8_8_01_4_4" prot="public">llama::internal::GetUIDfromDatumCoord&lt; T_DatumElement, DatumCoord&lt; T_datumDomainCoords... &gt;&gt;</innerclass>
    <innerclass refid="structllama_1_1internal_1_1GetUIDImpl" prot="public">llama::internal::GetUIDImpl</innerclass>
    <innerclass refid="structllama_1_1internal_1_1GetUIDImpl_3_01T__DatumElement_01_4" prot="public">llama::internal::GetUIDImpl&lt; T_DatumElement &gt;</innerclass>
    <innerclass refid="structllama_1_1internal_1_1GetUIDImpl_3_01T__DatumElement_00_01T__firstDatumDomainCoord_00_01T__datumDomainCoords_8_8_8_01_4" prot="public">llama::internal::GetUIDImpl&lt; T_DatumElement, T_firstDatumDomainCoord, T_datumDomainCoords... &gt;</innerclass>
    <innerclass refid="structllama_1_1internal_1_1IntegerSequenceHelper" prot="public">llama::internal::IntegerSequenceHelper</innerclass>
    <innerclass refid="structllama_1_1internal_1_1IntegerSequenceHelper_3_010_00_01T__vals_8_8_8_01_4" prot="public">llama::internal::IntegerSequenceHelper&lt; 0, T_vals... &gt;</innerclass>
    <innerclass refid="structllama_1_1internal_1_1LinearBytePosImpl" prot="public">llama::internal::LinearBytePosImpl</innerclass>
    <innerclass refid="structllama_1_1internal_1_1LinearBytePosImpl_3_01DatumStruct_3_01_4_00_01T__DatumCoord_00_01T__IterCoord_01_4" prot="public">llama::internal::LinearBytePosImpl&lt; DatumStruct&lt; &gt;, T_DatumCoord, T_IterCoord &gt;</innerclass>
    <innerclass refid="structllama_1_1internal_1_1LinearBytePosImpl_3_01DatumStruct_3_01T__FirstDatumElement_00_01T__Daab3e6bc06488e5011eff271a9737aa6b" prot="public">llama::internal::LinearBytePosImpl&lt; DatumStruct&lt; T_FirstDatumElement, T_DatumElements... &gt;, T_DatumCoord, T_IterCoord &gt;</innerclass>
    <innerclass refid="structllama_1_1internal_1_1MappingDatumCoordCaller" prot="public">llama::internal::MappingDatumCoordCaller</innerclass>
    <innerclass refid="structllama_1_1internal_1_1MappingDatumCoordCaller_3_01DatumCoord_3_01T__coords_8_8_8_01_4_01_4" prot="public">llama::internal::MappingDatumCoordCaller&lt; DatumCoord&lt; T_coords... &gt; &gt;</innerclass>
    <innerclass refid="structllama_1_1internal_1_1StubTypeImpl" prot="public">llama::internal::StubTypeImpl</innerclass>
    <innerclass refid="structllama_1_1internal_1_1ZeroSequenceHelper" prot="public">llama::internal::ZeroSequenceHelper</innerclass>
    <innerclass refid="structllama_1_1internal_1_1ZeroSequenceHelper_3_010_00_01T__vals_8_8_8_01_4" prot="public">llama::internal::ZeroSequenceHelper&lt; 0, T_vals... &gt;</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespacellama_1_1internal_1a7c26f441239229fe528731f2c4143b50" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T_Allocator</type>
          </param>
          <param>
            <type>typename T_Mapping</type>
          </param>
          <param>
            <type>std::size_t...</type>
            <declname>Is</declname>
            <defname>Is</defname>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto llama::internal::makeBlobArrayImpl</definition>
        <argsstring>(T_Mapping const mapping, typename T_Allocator::Parameter const &amp;allocatorParams, IntegerSequence&lt; Is... &gt;) -&gt; Array&lt; typename T_Allocator::BlobType, T_Mapping::blobCount &gt;</argsstring>
        <name>makeBlobArrayImpl</name>
        <param>
          <type>T_Mapping const</type>
          <declname>mapping</declname>
        </param>
        <param>
          <type>typename T_Allocator::Parameter const &amp;</type>
          <declname>allocatorParams</declname>
        </param>
        <param>
          <type><ref refid="structllama_1_1IntegerSequence" kindref="compound">IntegerSequence</ref>&lt; Is... &gt;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexander/develop/work/llama/include/llama/Factory.hpp" line="41" column="1" bodyfile="/home/alexander/develop/work/llama/include/llama/Factory.hpp" bodystart="41" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="namespacellama_1_1internal_1ad2bf21ee2ef972d55572612e2dfc1ce2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T_Allocator</type>
          </param>
          <param>
            <type>typename T_Mapping</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto llama::internal::makeBlobArray</definition>
        <argsstring>(T_Mapping const mapping, typename T_Allocator::Parameter const &amp;allocatorParams) -&gt; Array&lt; typename T_Allocator::BlobType, T_Mapping::blobCount &gt;</argsstring>
        <name>makeBlobArray</name>
        <param>
          <type>T_Mapping const</type>
          <declname>mapping</declname>
        </param>
        <param>
          <type>typename T_Allocator::Parameter const &amp;</type>
          <declname>allocatorParams</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexander/develop/work/llama/include/llama/Factory.hpp" line="69" column="1" bodyfile="/home/alexander/develop/work/llama/include/llama/Factory.hpp" bodystart="69" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="namespacellama_1_1internal_1a3b3f224e134a2c1c5151bef7e00c94dd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>std::size_t...</type>
            <declname>T_dims</declname>
            <defname>T_dims</defname>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto llama::internal::userDomainZeroHelper</definition>
        <argsstring>(IntegerSequence&lt; T_dims... &gt;) -&gt; UserDomain&lt; sizeof...(T_dims) &gt;</argsstring>
        <name>userDomainZeroHelper</name>
        <param>
          <type><ref refid="structllama_1_1IntegerSequence" kindref="compound">IntegerSequence</ref>&lt; T_dims... &gt;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexander/develop/work/llama/include/llama/UserDomain.hpp" line="167" column="1" bodyfile="/home/alexander/develop/work/llama/include/llama/UserDomain.hpp" bodystart="167" bodyend="171"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/alexander/develop/work/llama/include/llama/DatumStruct.hpp" line="44" column="1"/>
  </compounddef>
</doxygen>
