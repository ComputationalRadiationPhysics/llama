<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="namespacellama_1_1mapping_1_1tree_1_1operations" kind="namespace" language="C++">
    <compoundname>llama::mapping::tree::operations</compoundname>
    <innernamespace refid="namespacellama_1_1mapping_1_1tree_1_1operations_1_1internal">llama::mapping::tree::operations::internal</innernamespace>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespacellama_1_1mapping_1_1tree_1_1operations_1aa314792928e37f27d51c2ca7bfb0c22a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T_TreeCoord</type>
          </param>
          <param>
            <type>typename T_Tree</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto llama::mapping::tree::operations::changeNodeRuntime</definition>
        <argsstring>(T_Tree const &amp;tree, std::size_t const newValue) -&gt; decltype(internal::ChangeNodeRuntime&lt; T_Tree, T_TreeCoord &gt;()(tree, newValue))</argsstring>
        <name>changeNodeRuntime</name>
        <param>
          <type>T_Tree const &amp;</type>
          <declname>tree</declname>
        </param>
        <param>
          <type>std::size_t const</type>
          <declname>newValue</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexander/develop/work/llama/include/llama/mapping/tree/operations/ChangeNodeRuntime.hpp" line="163" column="1" bodyfile="/home/alexander/develop/work/llama/include/llama/mapping/tree/operations/ChangeNodeRuntime.hpp" bodystart="163" bodyend="184"/>
      </memberdef>
      <memberdef kind="function" id="namespacellama_1_1mapping_1_1tree_1_1operations_1a3f86c4dabf3be3fbb625609b784b60df" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T_TreeCoord</type>
          </param>
          <param>
            <type>template&lt; class, class &gt; class</type>
            <declname>T_Operation</declname>
            <defname>T_Operation</defname>
          </param>
          <param>
            <type>typename T_Tree</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto llama::mapping::tree::operations::changeNodeChildsRuntime</definition>
        <argsstring>(T_Tree const &amp;tree, std::size_t const newValue) -&gt; decltype(internal::ChangeNodeChildsRuntime&lt; T_Tree, T_Operation, T_TreeCoord &gt;()(tree, newValue))</argsstring>
        <name>changeNodeChildsRuntime</name>
        <param>
          <type>T_Tree const &amp;</type>
          <declname>tree</declname>
        </param>
        <param>
          <type>std::size_t const</type>
          <declname>newValue</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexander/develop/work/llama/include/llama/mapping/tree/operations/ChangeNodeRuntime.hpp" line="433" column="1" bodyfile="/home/alexander/develop/work/llama/include/llama/mapping/tree/operations/ChangeNodeRuntime.hpp" bodystart="433" bodyend="456"/>
      </memberdef>
      <memberdef kind="function" id="namespacellama_1_1mapping_1_1tree_1_1operations_1a6ce218a561d1228dac67f9b8197ddfd1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T_TreeCoord</type>
          </param>
          <param>
            <type>typename T_Tree</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto llama::mapping::tree::operations::getNode</definition>
        <argsstring>(T_Tree const &amp;tree) -&gt; decltype(internal::GetNode&lt; T_Tree, T_TreeCoord &gt;()(tree))</argsstring>
        <name>getNode</name>
        <param>
          <type>T_Tree const &amp;</type>
          <declname>tree</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexander/develop/work/llama/include/llama/mapping/tree/operations/GetNode.hpp" line="98" column="1" bodyfile="/home/alexander/develop/work/llama/include/llama/mapping/tree/operations/GetNode.hpp" bodystart="98" bodyend="110"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/alexander/develop/work/llama/include/llama/mapping/tree/operations/ChangeNodeRuntime.hpp" line="35" column="1"/>
  </compounddef>
</doxygen>
