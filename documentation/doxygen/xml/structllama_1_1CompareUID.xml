<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structllama_1_1CompareUID" kind="struct" language="C++" prot="public">
    <compoundname>llama::CompareUID</compoundname>
    <includes refid="CompareUID_8hpp" local="no">CompareUID.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename T_DDA</type>
      </param>
      <param>
        <type>typename T_BaseA</type>
      </param>
      <param>
        <type>typename T_LocalA</type>
      </param>
      <param>
        <type>typename T_DDB</type>
      </param>
      <param>
        <type>typename T_BaseB</type>
      </param>
      <param>
        <type>typename T_LocalB</type>
      </param>
      <param>
        <type>typename SFINAE</type>
        <defval>void</defval>
      </param>
    </templateparamlist>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="structllama_1_1CompareUID_1a7cc4d6a29a8d67e0a1be30b274863823" prot="public" static="yes" mutable="no">
        <type>constexpr bool</type>
        <definition>constexpr bool llama::CompareUID&lt; T_DDA, T_BaseA, T_LocalA, T_DDB, T_BaseB, T_LocalB, SFINAE &gt;::value</definition>
        <argsstring></argsstring>
        <name>value</name>
        <briefdescription>
<para>true if the two UIDs are exactly the same, otherwise false. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexander/develop/work/llama/include/llama/CompareUID.hpp" line="55" column="1" bodyfile="/home/alexander/develop/work/llama/include/llama/CompareUID.hpp" bodystart="55" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Tells whether two coordinates in two datum domains have the same UID. <parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T_DDA</parametername>
</parameternamelist>
<parameterdescription>
<para>first user domain </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>T_BaseA</parametername>
</parameternamelist>
<parameterdescription>
<para>First part of the coordinate in the first user domain as <ref refid="structllama_1_1DatumCoord" kindref="compound">DatumCoord</ref>. This will be used for getting the UID, but not for the comparison. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>T_LocalA</parametername>
</parameternamelist>
<parameterdescription>
<para>Second part of the coordinate in the first user domain as <ref refid="structllama_1_1DatumCoord" kindref="compound">DatumCoord</ref>. This will be used for the comparison with the second datum domain. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>T_DDB</parametername>
</parameternamelist>
<parameterdescription>
<para>second user domain </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>T_BaseB</parametername>
</parameternamelist>
<parameterdescription>
<para>First part of the coordinate in the second user domain as <ref refid="structllama_1_1DatumCoord" kindref="compound">DatumCoord</ref>. This will be used for getting the UID, but not for the comparison. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>T_LocalB</parametername>
</parameternamelist>
<parameterdescription>
<para>Second part of the coordinate in the second user domain as <ref refid="structllama_1_1DatumCoord" kindref="compound">DatumCoord</ref>. This will be used for the comparison with the first datum domain. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>    </detaileddescription>
    <location file="/home/alexander/develop/work/llama/include/llama/CompareUID.hpp" line="53" column="1" bodyfile="/home/alexander/develop/work/llama/include/llama/CompareUID.hpp" bodystart="52" bodyend="74"/>
    <listofallmembers>
      <member refid="structllama_1_1CompareUID_1a7cc4d6a29a8d67e0a1be30b274863823" prot="public" virt="non-virtual"><scope>llama::CompareUID</scope><name>value</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
