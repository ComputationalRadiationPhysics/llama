<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structllama_1_1Tuple" kind="struct" language="C++" prot="public">
    <compoundname>llama::Tuple</compoundname>
    <templateparamlist>
      <param>
        <type>typename...</type>
        <declname>T_Elements</declname>
        <defname>T_Elements</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structllama_1_1Tuple_1ab8837ba339f9b728318791dc45497369" prot="public" static="no">
        <type><ref refid="structllama_1_1Tuple" kindref="compound">Tuple</ref>&lt; TheFirstElement &gt;</type>
        <definition>using llama::Tuple::FirstElement =  Tuple &lt; TheFirstElement &gt;</definition>
        <argsstring></argsstring>
        <name>FirstElement</name>
        <briefdescription>
<para>first element of the tuple </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexander/develop/work/llama/include/llama/Tuple.dox" line="33" column="1" bodyfile="/home/alexander/develop/work/llama/include/llama/Tuple.dox" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structllama_1_1Tuple_1ada3c49261d16fb88fce9e872a2ba5059" prot="public" static="no">
        <type><ref refid="structllama_1_1Tuple" kindref="compound">Tuple</ref>&lt; RemainingElements... &gt;</type>
        <definition>using llama::Tuple::RestTuple =  Tuple&lt; RemainingElements... &gt;</definition>
        <argsstring></argsstring>
        <name>RestTuple</name>
        <briefdescription>
<para>tuple with the remaining elements </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexander/develop/work/llama/include/llama/Tuple.dox" line="35" column="1" bodyfile="/home/alexander/develop/work/llama/include/llama/Tuple.dox" bodystart="35" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structllama_1_1Tuple_1a25a3b0efac8043b6e9b03c35762e7768" prot="public" static="no" mutable="no">
        <type><ref refid="structllama_1_1Tuple_1ab8837ba339f9b728318791dc45497369" kindref="member">FirstElement</ref></type>
        <definition>FirstElement llama::Tuple&lt; T_Elements &gt;::first</definition>
        <argsstring></argsstring>
        <name>first</name>
        <briefdescription>
<para>the first element (if existing) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexander/develop/work/llama/include/llama/Tuple.dox" line="58" column="1" bodyfile="/home/alexander/develop/work/llama/include/llama/Tuple.dox" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structllama_1_1Tuple_1aa829a9bc2f609cb145c4b7b3eb357e33" prot="public" static="no" mutable="no">
        <type><ref refid="structllama_1_1Tuple_1ada3c49261d16fb88fce9e872a2ba5059" kindref="member">RestTuple</ref></type>
        <definition>RestTuple llama::Tuple&lt; T_Elements &gt;::rest</definition>
        <argsstring></argsstring>
        <name>rest</name>
        <briefdescription>
<para>the rest tuple (may be empty or not existing at all for an empty tuple) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexander/develop/work/llama/include/llama/Tuple.dox" line="60" column="1" bodyfile="/home/alexander/develop/work/llama/include/llama/Tuple.dox" bodystart="60" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structllama_1_1Tuple_1ae0bcaf7c9e80e794a3b89bc6154ea1ff" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>llama::Tuple&lt; T_Elements &gt;::Tuple</definition>
        <argsstring>()=default</argsstring>
        <name>Tuple</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexander/develop/work/llama/include/llama/Tuple.dox" line="38" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structllama_1_1Tuple_1a9f2c7e3039d67ece5c26cc659d55a823" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>llama::Tuple&lt; T_Elements &gt;::Tuple</definition>
        <argsstring>(T_Elements const ... elements)</argsstring>
        <name>Tuple</name>
        <param>
          <type>T_Elements const ...</type>
          <declname>elements</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Creates the tuple with the given elements. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>elements</parametername>
</parameternamelist>
<parameterdescription>
<para>elements to initialize the tuple </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexander/develop/work/llama/include/llama/Tuple.dox" line="44" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structllama_1_1Tuple_1a886e6b930f2fb074c34da82ea2703fc7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>llama::Tuple&lt; T_Elements &gt;::Tuple</definition>
        <argsstring>(FirstElement const first, RestTuple const rest)</argsstring>
        <name>Tuple</name>
        <param>
          <type><ref refid="structllama_1_1Tuple_1ab8837ba339f9b728318791dc45497369" kindref="member">FirstElement</ref> const</type>
          <declname>first</declname>
        </param>
        <param>
          <type><ref refid="structllama_1_1Tuple_1ada3c49261d16fb88fce9e872a2ba5059" kindref="member">RestTuple</ref> const</type>
          <declname>rest</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Creates the tuple with the given first element and another already existing tuple concatenated at the end. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>first</parametername>
</parameternamelist>
<parameterdescription>
<para>new first element of the tuple </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rest</parametername>
</parameternamelist>
<parameterdescription>
<para>tuple to concatenate </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexander/develop/work/llama/include/llama/Tuple.dox" line="52" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><ref refid="structllama_1_1Tuple" kindref="compound">Tuple</ref> class like <computeroutput>std::tuple</computeroutput> but suitable for use with offloading devices like GPUs and extended with some (for LLAMA) useful methods. <parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T_Elements...</parametername>
</parameternamelist>
<parameterdescription>
<para>tuple elements, may be empty </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>    </detaileddescription>
    <location file="/home/alexander/develop/work/llama/include/llama/Tuple.dox" line="31" column="1" bodyfile="/home/alexander/develop/work/llama/include/llama/Tuple.dox" bodystart="30" bodyend="61"/>
    <listofallmembers>
      <member refid="structllama_1_1Tuple_1a25a3b0efac8043b6e9b03c35762e7768" prot="public" virt="non-virtual"><scope>llama::Tuple</scope><name>first</name></member>
      <member refid="structllama_1_1Tuple_1ab8837ba339f9b728318791dc45497369" prot="public" virt="non-virtual"><scope>llama::Tuple</scope><name>FirstElement</name></member>
      <member refid="structllama_1_1Tuple_1aa829a9bc2f609cb145c4b7b3eb357e33" prot="public" virt="non-virtual"><scope>llama::Tuple</scope><name>rest</name></member>
      <member refid="structllama_1_1Tuple_1ada3c49261d16fb88fce9e872a2ba5059" prot="public" virt="non-virtual"><scope>llama::Tuple</scope><name>RestTuple</name></member>
      <member refid="structllama_1_1Tuple_1ae0bcaf7c9e80e794a3b89bc6154ea1ff" prot="public" virt="non-virtual"><scope>llama::Tuple</scope><name>Tuple</name></member>
      <member refid="structllama_1_1Tuple_1a9f2c7e3039d67ece5c26cc659d55a823" prot="public" virt="non-virtual"><scope>llama::Tuple</scope><name>Tuple</name></member>
      <member refid="structllama_1_1Tuple_1a886e6b930f2fb074c34da82ea2703fc7" prot="public" virt="non-virtual"><scope>llama::Tuple</scope><name>Tuple</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
