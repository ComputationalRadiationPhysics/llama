<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structllama_1_1VirtualDatum_1_1AccessImpl_3_01T__DatumCoord_00_01typename_01std_1_1enable__if_3_cad2630bd48dbf313b8cd0753edeb19d" kind="struct" language="C++" prot="public">
    <compoundname>llama::VirtualDatum::AccessImpl&lt; T_DatumCoord, typename std::enable_if&lt; is_DatumStruct&lt; GetTypeFromDatumCoord&lt; typename Mapping::DatumDomain, typename BoundDatumDomain::template Cat&lt; T_DatumCoord &gt; &gt; &gt;::value &gt;::type &gt;</compoundname>
    <includes refid="View_8hpp" local="no">View.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename T_DatumCoord</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="structllama_1_1VirtualDatum_1_1AccessImpl_3_01T__DatumCoord_00_01typename_01std_1_1enable__if_3_cad2630bd48dbf313b8cd0753edeb19d_1a17de3a665158ab4331d397963682aa45" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T_UserDomain</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>static auto llama::VirtualDatum&lt; T_View, T_BoundDatumDomain &gt;::AccessImpl&lt; T_DatumCoord, typename std::enable_if&lt; is_DatumStruct&lt; GetTypeFromDatumCoord&lt; typename Mapping::DatumDomain, typename BoundDatumDomain::template Cat&lt; T_DatumCoord &gt; &gt; &gt;::value &gt;::type &gt;::apply</definition>
        <argsstring>(T_View &amp;&amp;view, T_UserDomain const &amp;userDomainPos) -&gt; decltype(VirtualDatum&lt; View&lt; Mapping, BlobType &gt;, typename BoundDatumDomain::template Cat&lt; T_DatumCoord &gt; &gt;</argsstring>
        <name>apply</name>
        <param>
          <type>T_View &amp;&amp;</type>
          <declname>view</declname>
        </param>
        <param>
          <type>T_UserDomain const &amp;</type>
          <declname>userDomainPos</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexander/develop/work/llama/include/llama/View.hpp" line="780" column="1" bodyfile="/home/alexander/develop/work/llama/include/llama/View.hpp" bodystart="780" bodyend="793"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/alexander/develop/work/llama/include/llama/View.hpp" line="775" column="1" bodyfile="/home/alexander/develop/work/llama/include/llama/View.hpp" bodystart="764" bodyend="807"/>
    <listofallmembers>
      <member refid="structllama_1_1VirtualDatum_1_1AccessImpl_3_01T__DatumCoord_00_01typename_01std_1_1enable__if_3_cad2630bd48dbf313b8cd0753edeb19d_1a17de3a665158ab4331d397963682aa45" prot="public" virt="non-virtual"><scope>llama::VirtualDatum::AccessImpl&lt; T_DatumCoord, typename std::enable_if&lt; is_DatumStruct&lt; GetTypeFromDatumCoord&lt; typename Mapping::DatumDomain, typename BoundDatumDomain::template Cat&lt; T_DatumCoord &gt; &gt; &gt;::value &gt;::type &gt;</scope><name>apply</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
