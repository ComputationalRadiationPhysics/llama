<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structllama_1_1VirtualView" kind="struct" language="C++" prot="public">
    <compoundname>llama::VirtualView</compoundname>
    <includes refid="VirtualView_8hpp" local="no">VirtualView.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename T_ParentViewType</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structllama_1_1VirtualView_1a13b6273ccd2fa7b6c1b7b00950cf307f" prot="public" static="no">
        <type>T_ParentViewType</type>
        <definition>using llama::VirtualView&lt; T_ParentViewType &gt;::ParentView =  T_ParentViewType</definition>
        <argsstring></argsstring>
        <name>ParentView</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexander/develop/work/llama/include/llama/VirtualView.hpp" line="29" column="1" bodyfile="/home/alexander/develop/work/llama/include/llama/VirtualView.hpp" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structllama_1_1VirtualView_1af042c300cedcfe447fa84c9c2ce9e152" prot="public" static="no">
        <type>typename ParentView::BlobType</type>
        <definition>using llama::VirtualView&lt; T_ParentViewType &gt;::BlobType =  typename ParentView::BlobType</definition>
        <argsstring></argsstring>
        <name>BlobType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexander/develop/work/llama/include/llama/VirtualView.hpp" line="30" column="1" bodyfile="/home/alexander/develop/work/llama/include/llama/VirtualView.hpp" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structllama_1_1VirtualView_1ab8b386434df0aed417e974b69a7379b3" prot="public" static="no">
        <type>typename ParentView::Mapping</type>
        <definition>using llama::VirtualView&lt; T_ParentViewType &gt;::Mapping =  typename ParentView::Mapping</definition>
        <argsstring></argsstring>
        <name>Mapping</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexander/develop/work/llama/include/llama/VirtualView.hpp" line="31" column="1" bodyfile="/home/alexander/develop/work/llama/include/llama/VirtualView.hpp" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structllama_1_1VirtualView_1a95061d3ecfa6229c2606378cb1f78f33" prot="public" static="no">
        <type>typename ParentView::VirtualDatumType</type>
        <definition>using llama::VirtualView&lt; T_ParentViewType &gt;::VirtualDatumType =  typename ParentView::VirtualDatumType</definition>
        <argsstring></argsstring>
        <name>VirtualDatumType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexander/develop/work/llama/include/llama/VirtualView.hpp" line="32" column="1" bodyfile="/home/alexander/develop/work/llama/include/llama/VirtualView.hpp" bodystart="32" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structllama_1_1VirtualView_1abca62490ac2e860c543ef5c1d11c878b" prot="public" static="no" mutable="no">
        <type><ref refid="structllama_1_1VirtualView_1a13b6273ccd2fa7b6c1b7b00950cf307f" kindref="member">ParentView</ref> &amp;</type>
        <definition>ParentView&amp; llama::VirtualView&lt; T_ParentViewType &gt;::parentView</definition>
        <argsstring></argsstring>
        <name>parentView</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexander/develop/work/llama/include/llama/VirtualView.hpp" line="145" column="1" bodyfile="/home/alexander/develop/work/llama/include/llama/VirtualView.hpp" bodystart="145" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structllama_1_1VirtualView_1ad1ed8471a00d7a016595b52cf0fd541b" prot="public" static="no" mutable="no">
        <type>const Mapping::UserDomain</type>
        <definition>const Mapping::UserDomain llama::VirtualView&lt; T_ParentViewType &gt;::position</definition>
        <argsstring></argsstring>
        <name>position</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexander/develop/work/llama/include/llama/VirtualView.hpp" line="146" column="1" bodyfile="/home/alexander/develop/work/llama/include/llama/VirtualView.hpp" bodystart="146" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structllama_1_1VirtualView_1ae4912fed3878afd8cb12b89510c9e5a8" prot="public" static="no" mutable="no">
        <type>const Mapping::UserDomain</type>
        <definition>const Mapping::UserDomain llama::VirtualView&lt; T_ParentViewType &gt;::size</definition>
        <argsstring></argsstring>
        <name>size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexander/develop/work/llama/include/llama/VirtualView.hpp" line="147" column="1" bodyfile="/home/alexander/develop/work/llama/include/llama/VirtualView.hpp" bodystart="147" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structllama_1_1VirtualView_1aec09601508ebb03072c98dc6beab8b5c" prot="public" static="no" mutable="no">
        <type><ref refid="structllama_1_1Array" kindref="compound">Array</ref>&lt; <ref refid="structllama_1_1VirtualView_1af042c300cedcfe447fa84c9c2ce9e152" kindref="member">BlobType</ref>, Mapping::blobCount &gt; &amp;</type>
        <definition>Array&lt; BlobType, Mapping::blobCount &gt;&amp; llama::VirtualView&lt; T_ParentViewType &gt;::blob</definition>
        <argsstring></argsstring>
        <name>blob</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexander/develop/work/llama/include/llama/VirtualView.hpp" line="151" column="1" bodyfile="/home/alexander/develop/work/llama/include/llama/VirtualView.hpp" bodystart="151" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structllama_1_1VirtualView_1af96b21c522623cc94c88188960bbfddd" prot="public" static="no" mutable="no">
        <type>const <ref refid="structllama_1_1VirtualView_1ab8b386434df0aed417e974b69a7379b3" kindref="member">Mapping</ref> &amp;</type>
        <definition>const Mapping&amp; llama::VirtualView&lt; T_ParentViewType &gt;::mapping</definition>
        <argsstring></argsstring>
        <name>mapping</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexander/develop/work/llama/include/llama/VirtualView.hpp" line="152" column="1" bodyfile="/home/alexander/develop/work/llama/include/llama/VirtualView.hpp" bodystart="152" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structllama_1_1VirtualView_1a6497f87b0ae075b3336490075305363e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>llama::VirtualView&lt; T_ParentViewType &gt;::VirtualView</definition>
        <argsstring>()=delete</argsstring>
        <name>VirtualView</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexander/develop/work/llama/include/llama/VirtualView.hpp" line="34" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structllama_1_1VirtualView_1abc0a9afd6144f2dd210cd54e86b652f6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>llama::VirtualView&lt; T_ParentViewType &gt;::VirtualView</definition>
        <argsstring>(VirtualView const &amp;)=default</argsstring>
        <name>VirtualView</name>
        <param>
          <type><ref refid="structllama_1_1VirtualView" kindref="compound">VirtualView</ref> const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexander/develop/work/llama/include/llama/VirtualView.hpp" line="35" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structllama_1_1VirtualView_1a6cd714439f67e826fe7d888c5c8dba7b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>llama::VirtualView&lt; T_ParentViewType &gt;::VirtualView</definition>
        <argsstring>(VirtualView &amp;&amp;)=default</argsstring>
        <name>VirtualView</name>
        <param>
          <type><ref refid="structllama_1_1VirtualView" kindref="compound">VirtualView</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexander/develop/work/llama/include/llama/VirtualView.hpp" line="36" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structllama_1_1VirtualView_1abe5b8ab3619c15aec658c7eb7d48495e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>llama::VirtualView&lt; T_ParentViewType &gt;::~VirtualView</definition>
        <argsstring>()=default</argsstring>
        <name>~VirtualView</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexander/develop/work/llama/include/llama/VirtualView.hpp" line="37" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structllama_1_1VirtualView_1a2be6acaee5e78126a3b83b7c08e1b84e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="macros_8hpp_1affb1b2bdbbed82d386e8cf712cc7e4b5" kindref="member">LLAMA_NO_HOST_ACC_WARNING</ref> <ref refid="macros_8hpp_1adad0b5fb27fb373cb41c47ed7ab419af" kindref="member">LLAMA_FN_HOST_ACC_INLINE</ref></type>
        <definition>LLAMA_NO_HOST_ACC_WARNING LLAMA_FN_HOST_ACC_INLINE llama::VirtualView&lt; T_ParentViewType &gt;::VirtualView</definition>
        <argsstring>(ParentView &amp;parentView, typename Mapping::UserDomain const position, typename Mapping::UserDomain const size)</argsstring>
        <name>VirtualView</name>
        <param>
          <type><ref refid="structllama_1_1VirtualView_1a13b6273ccd2fa7b6c1b7b00950cf307f" kindref="member">ParentView</ref> &amp;</type>
          <declname>parentView</declname>
        </param>
        <param>
          <type>typename Mapping::UserDomain const</type>
          <declname>position</declname>
        </param>
        <param>
          <type>typename Mapping::UserDomain const</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexander/develop/work/llama/include/llama/VirtualView.hpp" line="41" column="1" bodyfile="/home/alexander/develop/work/llama/include/llama/VirtualView.hpp" bodystart="41" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="structllama_1_1VirtualView_1a0489a4234e874a58fa47bc6c7d1d885f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>std::size_t...</type>
            <declname>T_coords</declname>
            <defname>T_coords</defname>
          </param>
        </templateparamlist>
        <type><ref refid="macros_8hpp_1affb1b2bdbbed82d386e8cf712cc7e4b5" kindref="member">LLAMA_NO_HOST_ACC_WARNING</ref> <ref refid="macros_8hpp_1adad0b5fb27fb373cb41c47ed7ab419af" kindref="member">LLAMA_FN_HOST_ACC_INLINE</ref> auto</type>
        <definition>LLAMA_NO_HOST_ACC_WARNING LLAMA_FN_HOST_ACC_INLINE auto llama::VirtualView&lt; T_ParentViewType &gt;::accessor</definition>
        <argsstring>(typename Mapping::UserDomain const userDomain) -&gt; GetType&lt; typename Mapping::DatumDomain, T_coords... &gt; &amp;</argsstring>
        <name>accessor</name>
        <param>
          <type>typename Mapping::UserDomain const</type>
          <declname>userDomain</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexander/develop/work/llama/include/llama/VirtualView.hpp" line="57" column="1" bodyfile="/home/alexander/develop/work/llama/include/llama/VirtualView.hpp" bodystart="57" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="structllama_1_1VirtualView_1a42db0ff186da22494a44aa842bb61826" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>T_UIDs</declname>
            <defname>T_UIDs</defname>
          </param>
        </templateparamlist>
        <type><ref refid="macros_8hpp_1affb1b2bdbbed82d386e8cf712cc7e4b5" kindref="member">LLAMA_NO_HOST_ACC_WARNING</ref> <ref refid="macros_8hpp_1adad0b5fb27fb373cb41c47ed7ab419af" kindref="member">LLAMA_FN_HOST_ACC_INLINE</ref> auto</type>
        <definition>LLAMA_NO_HOST_ACC_WARNING LLAMA_FN_HOST_ACC_INLINE auto llama::VirtualView&lt; T_ParentViewType &gt;::accessor</definition>
        <argsstring>(typename Mapping::UserDomain const userDomain) -&gt; GetTypeFromDatumCoord&lt; typename Mapping::DatumDomain, GetCoordFromUID&lt; typename Mapping::DatumDomain, T_UIDs... &gt; &gt; &amp;</argsstring>
        <name>accessor</name>
        <param>
          <type>typename Mapping::UserDomain const</type>
          <declname>userDomain</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexander/develop/work/llama/include/llama/VirtualView.hpp" line="72" column="1" bodyfile="/home/alexander/develop/work/llama/include/llama/VirtualView.hpp" bodystart="72" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="structllama_1_1VirtualView_1a28325234ee1cc92fe890a727564b1c26" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>auto <ref refid="macros_8hpp_1adad0b5fb27fb373cb41c47ed7ab419af" kindref="member">LLAMA_FN_HOST_ACC_INLINE</ref></type>
        <definition>auto LLAMA_FN_HOST_ACC_INLINE llama::VirtualView&lt; T_ParentViewType &gt;::operator()</definition>
        <argsstring>(typename Mapping::UserDomain const userDomain) -&gt; VirtualDatumType</argsstring>
        <name>operator()</name>
        <param>
          <type>typename Mapping::UserDomain const</type>
          <declname>userDomain</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexander/develop/work/llama/include/llama/VirtualView.hpp" line="88" column="1" bodyfile="/home/alexander/develop/work/llama/include/llama/VirtualView.hpp" bodystart="88" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="structllama_1_1VirtualView_1ad1c736def64ac78e0001f9941a92b9da" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>T_Coord</declname>
            <defname>T_Coord</defname>
          </param>
        </templateparamlist>
        <type><ref refid="macros_8hpp_1adad0b5fb27fb373cb41c47ed7ab419af" kindref="member">LLAMA_FN_HOST_ACC_INLINE</ref> auto</type>
        <definition>LLAMA_FN_HOST_ACC_INLINE auto llama::VirtualView&lt; T_ParentViewType &gt;::operator()</definition>
        <argsstring>(T_Coord... coord) -&gt; VirtualDatumType</argsstring>
        <name>operator()</name>
        <param>
          <type>T_Coord...</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexander/develop/work/llama/include/llama/VirtualView.hpp" line="98" column="1" bodyfile="/home/alexander/develop/work/llama/include/llama/VirtualView.hpp" bodystart="98" bodyend="105"/>
      </memberdef>
      <memberdef kind="function" id="structllama_1_1VirtualView_1a993ebaf01d040cd0535e0ce609b51b53" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>T_Coord</declname>
            <defname>T_Coord</defname>
          </param>
        </templateparamlist>
        <type><ref refid="macros_8hpp_1adad0b5fb27fb373cb41c47ed7ab419af" kindref="member">LLAMA_FN_HOST_ACC_INLINE</ref> auto</type>
        <definition>LLAMA_FN_HOST_ACC_INLINE auto llama::VirtualView&lt; T_ParentViewType &gt;::operator()</definition>
        <argsstring>(T_Coord... coord) const -&gt; const VirtualDatumType</argsstring>
        <name>operator()</name>
        <param>
          <type>T_Coord...</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexander/develop/work/llama/include/llama/VirtualView.hpp" line="110" column="1" bodyfile="/home/alexander/develop/work/llama/include/llama/VirtualView.hpp" bodystart="110" bodyend="117"/>
      </memberdef>
      <memberdef kind="function" id="structllama_1_1VirtualView_1af8d55c53a0fd092e75834de8b9cb1a41" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="macros_8hpp_1adad0b5fb27fb373cb41c47ed7ab419af" kindref="member">LLAMA_FN_HOST_ACC_INLINE</ref> auto</type>
        <definition>LLAMA_FN_HOST_ACC_INLINE auto llama::VirtualView&lt; T_ParentViewType &gt;::operator()</definition>
        <argsstring>(std::size_t coord=0) -&gt; VirtualDatumType</argsstring>
        <name>operator()</name>
        <param>
          <type>std::size_t</type>
          <declname>coord</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexander/develop/work/llama/include/llama/VirtualView.hpp" line="121" column="1" bodyfile="/home/alexander/develop/work/llama/include/llama/VirtualView.hpp" bodystart="121" bodyend="128"/>
      </memberdef>
      <memberdef kind="function" id="structllama_1_1VirtualView_1a88f64410638f235e3588b5b760ac1b05" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>std::size_t...</type>
            <declname>T_coord</declname>
            <defname>T_coord</defname>
          </param>
        </templateparamlist>
        <type><ref refid="macros_8hpp_1adad0b5fb27fb373cb41c47ed7ab419af" kindref="member">LLAMA_FN_HOST_ACC_INLINE</ref> auto</type>
        <definition>LLAMA_FN_HOST_ACC_INLINE auto llama::VirtualView&lt; T_ParentViewType &gt;::operator()</definition>
        <argsstring>(DatumCoord&lt; T_coord... &gt; &amp;&amp;dc=DatumCoord&lt; T_coord... &gt;()) -&gt; GetType&lt; typename Mapping::DatumDomain, T_coord... &gt; &amp;</argsstring>
        <name>operator()</name>
        <param>
          <type><ref refid="structllama_1_1DatumCoord" kindref="compound">DatumCoord</ref>&lt; T_coord... &gt; &amp;&amp;</type>
          <declname>dc</declname>
          <defval><ref refid="structllama_1_1DatumCoord" kindref="compound">DatumCoord</ref>&lt; T_coord... &gt;()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexander/develop/work/llama/include/llama/VirtualView.hpp" line="133" column="1" bodyfile="/home/alexander/develop/work/llama/include/llama/VirtualView.hpp" bodystart="133" bodyend="143"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="428">
        <label>llama::Array&lt; BlobType, Mapping::blobCount &gt;</label>
        <link refid="structllama_1_1Array"/>
      </node>
      <node id="427">
        <label>llama::VirtualView&lt; T_ParentViewType &gt;</label>
        <link refid="structllama_1_1VirtualView"/>
        <childnode refid="428" relation="usage">
          <edgelabel>blob</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/alexander/develop/work/llama/include/llama/VirtualView.hpp" line="28" column="1" bodyfile="/home/alexander/develop/work/llama/include/llama/VirtualView.hpp" bodystart="27" bodyend="153"/>
    <listofallmembers>
      <member refid="structllama_1_1VirtualView_1a0489a4234e874a58fa47bc6c7d1d885f" prot="public" virt="non-virtual"><scope>llama::VirtualView</scope><name>accessor</name></member>
      <member refid="structllama_1_1VirtualView_1a42db0ff186da22494a44aa842bb61826" prot="public" virt="non-virtual"><scope>llama::VirtualView</scope><name>accessor</name></member>
      <member refid="structllama_1_1VirtualView_1aec09601508ebb03072c98dc6beab8b5c" prot="public" virt="non-virtual"><scope>llama::VirtualView</scope><name>blob</name></member>
      <member refid="structllama_1_1VirtualView_1af042c300cedcfe447fa84c9c2ce9e152" prot="public" virt="non-virtual"><scope>llama::VirtualView</scope><name>BlobType</name></member>
      <member refid="structllama_1_1VirtualView_1af96b21c522623cc94c88188960bbfddd" prot="public" virt="non-virtual"><scope>llama::VirtualView</scope><name>mapping</name></member>
      <member refid="structllama_1_1VirtualView_1ab8b386434df0aed417e974b69a7379b3" prot="public" virt="non-virtual"><scope>llama::VirtualView</scope><name>Mapping</name></member>
      <member refid="structllama_1_1VirtualView_1a28325234ee1cc92fe890a727564b1c26" prot="public" virt="non-virtual"><scope>llama::VirtualView</scope><name>operator()</name></member>
      <member refid="structllama_1_1VirtualView_1ad1c736def64ac78e0001f9941a92b9da" prot="public" virt="non-virtual"><scope>llama::VirtualView</scope><name>operator()</name></member>
      <member refid="structllama_1_1VirtualView_1a993ebaf01d040cd0535e0ce609b51b53" prot="public" virt="non-virtual"><scope>llama::VirtualView</scope><name>operator()</name></member>
      <member refid="structllama_1_1VirtualView_1af8d55c53a0fd092e75834de8b9cb1a41" prot="public" virt="non-virtual"><scope>llama::VirtualView</scope><name>operator()</name></member>
      <member refid="structllama_1_1VirtualView_1a88f64410638f235e3588b5b760ac1b05" prot="public" virt="non-virtual"><scope>llama::VirtualView</scope><name>operator()</name></member>
      <member refid="structllama_1_1VirtualView_1a13b6273ccd2fa7b6c1b7b00950cf307f" prot="public" virt="non-virtual"><scope>llama::VirtualView</scope><name>ParentView</name></member>
      <member refid="structllama_1_1VirtualView_1abca62490ac2e860c543ef5c1d11c878b" prot="public" virt="non-virtual"><scope>llama::VirtualView</scope><name>parentView</name></member>
      <member refid="structllama_1_1VirtualView_1ad1ed8471a00d7a016595b52cf0fd541b" prot="public" virt="non-virtual"><scope>llama::VirtualView</scope><name>position</name></member>
      <member refid="structllama_1_1VirtualView_1ae4912fed3878afd8cb12b89510c9e5a8" prot="public" virt="non-virtual"><scope>llama::VirtualView</scope><name>size</name></member>
      <member refid="structllama_1_1VirtualView_1a95061d3ecfa6229c2606378cb1f78f33" prot="public" virt="non-virtual"><scope>llama::VirtualView</scope><name>VirtualDatumType</name></member>
      <member refid="structllama_1_1VirtualView_1a6497f87b0ae075b3336490075305363e" prot="public" virt="non-virtual"><scope>llama::VirtualView</scope><name>VirtualView</name></member>
      <member refid="structllama_1_1VirtualView_1abc0a9afd6144f2dd210cd54e86b652f6" prot="public" virt="non-virtual"><scope>llama::VirtualView</scope><name>VirtualView</name></member>
      <member refid="structllama_1_1VirtualView_1a6cd714439f67e826fe7d888c5c8dba7b" prot="public" virt="non-virtual"><scope>llama::VirtualView</scope><name>VirtualView</name></member>
      <member refid="structllama_1_1VirtualView_1a2be6acaee5e78126a3b83b7c08e1b84e" prot="public" virt="non-virtual"><scope>llama::VirtualView</scope><name>VirtualView</name></member>
      <member refid="structllama_1_1VirtualView_1abe5b8ab3619c15aec658c7eb7d48495e" prot="public" virt="non-virtual"><scope>llama::VirtualView</scope><name>~VirtualView</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
