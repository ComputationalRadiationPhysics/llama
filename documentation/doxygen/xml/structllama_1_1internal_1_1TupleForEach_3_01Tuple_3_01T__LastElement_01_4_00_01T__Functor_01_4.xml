<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structllama_1_1internal_1_1TupleForEach_3_01Tuple_3_01T__LastElement_01_4_00_01T__Functor_01_4" kind="struct" language="C++" prot="public">
    <compoundname>llama::internal::TupleForEach&lt; Tuple&lt; T_LastElement &gt;, T_Functor &gt;</compoundname>
    <templateparamlist>
      <param>
        <type>typename T_LastElement</type>
      </param>
      <param>
        <type>typename T_Functor</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structllama_1_1internal_1_1TupleForEach_3_01Tuple_3_01T__LastElement_01_4_00_01T__Functor_01_4_1a392e60b050bf6db512847e50365caf5f" prot="public" static="no">
        <type><ref refid="structllama_1_1Tuple" kindref="compound">Tuple</ref>&lt; T_LastElement &gt;</type>
        <definition>using llama::internal::TupleForEach&lt; Tuple&lt; T_LastElement &gt;, T_Functor &gt;::T_Tuple =  Tuple&lt; T_LastElement &gt;</definition>
        <argsstring></argsstring>
        <name>T_Tuple</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexander/develop/work/llama/include/llama/Tuple.dox" line="390" column="1" bodyfile="/home/alexander/develop/work/llama/include/llama/Tuple.dox" bodystart="390" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structllama_1_1internal_1_1TupleForEach_3_01Tuple_3_01T__LastElement_01_4_00_01T__Functor_01_4_1a23ffb57b5b223274ba0db806f840dd76" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto llama::internal::TupleForEach&lt; Tuple&lt; T_LastElement &gt;, T_Functor &gt;::operator()</definition>
        <argsstring>(T_Tuple const tuple, T_Functor const functor) -&gt; decltype(makeTuple(functor(tuple.first)))</argsstring>
        <name>operator()</name>
        <param>
          <type><ref refid="structllama_1_1internal_1_1TupleForEach_3_01Tuple_3_01T__LastElement_01_4_00_01T__Functor_01_4_1a392e60b050bf6db512847e50365caf5f" kindref="member">T_Tuple</ref> const</type>
          <declname>tuple</declname>
        </param>
        <param>
          <type>T_Functor const</type>
          <declname>functor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexander/develop/work/llama/include/llama/Tuple.dox" line="393" column="1" bodyfile="/home/alexander/develop/work/llama/include/llama/Tuple.dox" bodystart="393" bodyend="400"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/alexander/develop/work/llama/include/llama/Tuple.dox" line="389" column="1" bodyfile="/home/alexander/develop/work/llama/include/llama/Tuple.dox" bodystart="384" bodyend="401"/>
    <listofallmembers>
      <member refid="structllama_1_1internal_1_1TupleForEach_3_01Tuple_3_01T__LastElement_01_4_00_01T__Functor_01_4_1a23ffb57b5b223274ba0db806f840dd76" prot="public" virt="non-virtual"><scope>llama::internal::TupleForEach&lt; Tuple&lt; T_LastElement &gt;, T_Functor &gt;</scope><name>operator()</name></member>
      <member refid="structllama_1_1internal_1_1TupleForEach_3_01Tuple_3_01T__LastElement_01_4_00_01T__Functor_01_4_1a392e60b050bf6db512847e50365caf5f" prot="public" virt="non-virtual"><scope>llama::internal::TupleForEach&lt; Tuple&lt; T_LastElement &gt;, T_Functor &gt;</scope><name>T_Tuple</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
