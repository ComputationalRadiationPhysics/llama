<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structllama_1_1mapping_1_1AoS" kind="struct" language="C++" prot="public">
    <compoundname>llama::mapping::AoS</compoundname>
    <includes refid="AoS_8hpp" local="no">AoS.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename T_UserDomain</type>
      </param>
      <param>
        <type>typename T_DatumDomain</type>
      </param>
      <param>
        <type>typename T_LinearizeUserDomainAdressFunctor</type>
        <defval><ref refid="structllama_1_1LinearizeUserDomainAdress" kindref="compound">LinearizeUserDomainAdress</ref>&lt; T_UserDomain::count &gt;</defval>
      </param>
      <param>
        <type>typename T_ExtentUserDomainAdressFunctor</type>
        <defval><ref refid="structllama_1_1ExtentUserDomainAdress" kindref="compound">ExtentUserDomainAdress</ref>&lt; T_UserDomain::count &gt;</defval>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structllama_1_1mapping_1_1AoS_1aeaa14121b6e26b7be9306eda76ab9fb1" prot="public" static="no">
        <type>T_UserDomain</type>
        <definition>using llama::mapping::AoS&lt; T_UserDomain, T_DatumDomain, T_LinearizeUserDomainAdressFunctor, T_ExtentUserDomainAdressFunctor &gt;::UserDomain =  T_UserDomain</definition>
        <argsstring></argsstring>
        <name>UserDomain</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexander/develop/work/llama/include/llama/mapping/AoS.hpp" line="40" column="1" bodyfile="/home/alexander/develop/work/llama/include/llama/mapping/AoS.hpp" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structllama_1_1mapping_1_1AoS_1ae5d0c4673ed69f021273d80707042c54" prot="public" static="no">
        <type>T_DatumDomain</type>
        <definition>using llama::mapping::AoS&lt; T_UserDomain, T_DatumDomain, T_LinearizeUserDomainAdressFunctor, T_ExtentUserDomainAdressFunctor &gt;::DatumDomain =  T_DatumDomain</definition>
        <argsstring></argsstring>
        <name>DatumDomain</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexander/develop/work/llama/include/llama/mapping/AoS.hpp" line="41" column="1" bodyfile="/home/alexander/develop/work/llama/include/llama/mapping/AoS.hpp" bodystart="41" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="structllama_1_1mapping_1_1AoS_1ac976dd99145a8af1c2111fd725834b5d" prot="public" static="yes" mutable="no">
        <type>constexpr std::size_t</type>
        <definition>constexpr std::size_t llama::mapping::AoS&lt; T_UserDomain, T_DatumDomain, T_LinearizeUserDomainAdressFunctor, T_ExtentUserDomainAdressFunctor &gt;::blobCount</definition>
        <argsstring></argsstring>
        <name>blobCount</name>
        <initializer>= 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexander/develop/work/llama/include/llama/mapping/AoS.hpp" line="42" column="1" bodyfile="/home/alexander/develop/work/llama/include/llama/mapping/AoS.hpp" bodystart="42" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structllama_1_1mapping_1_1AoS_1a199b3a9b77dcf9ea7b48a0edc7cdae30" prot="public" static="no" mutable="no">
        <type><ref refid="structllama_1_1mapping_1_1AoS_1aeaa14121b6e26b7be9306eda76ab9fb1" kindref="member">UserDomain</ref> const</type>
        <definition>UserDomain const llama::mapping::AoS&lt; T_UserDomain, T_DatumDomain, T_LinearizeUserDomainAdressFunctor, T_ExtentUserDomainAdressFunctor &gt;::userDomainSize</definition>
        <argsstring></argsstring>
        <name>userDomainSize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexander/develop/work/llama/include/llama/mapping/AoS.hpp" line="89" column="1" bodyfile="/home/alexander/develop/work/llama/include/llama/mapping/AoS.hpp" bodystart="89" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structllama_1_1mapping_1_1AoS_1ab85db3706e63e9bf45849f29234941cb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>llama::mapping::AoS&lt; T_UserDomain, T_DatumDomain, T_LinearizeUserDomainAdressFunctor, T_ExtentUserDomainAdressFunctor &gt;::AoS</definition>
        <argsstring>(UserDomain const size)</argsstring>
        <name>AoS</name>
        <param>
          <type><ref refid="structllama_1_1mapping_1_1AoS_1aeaa14121b6e26b7be9306eda76ab9fb1" kindref="member">UserDomain</ref> const</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexander/develop/work/llama/include/llama/mapping/AoS.hpp" line="45" column="1" bodyfile="/home/alexander/develop/work/llama/include/llama/mapping/AoS.hpp" bodystart="45" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="structllama_1_1mapping_1_1AoS_1a2c1eeaa107bc149746164db4d900dd80" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>llama::mapping::AoS&lt; T_UserDomain, T_DatumDomain, T_LinearizeUserDomainAdressFunctor, T_ExtentUserDomainAdressFunctor &gt;::AoS</definition>
        <argsstring>()=default</argsstring>
        <name>AoS</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexander/develop/work/llama/include/llama/mapping/AoS.hpp" line="49" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structllama_1_1mapping_1_1AoS_1a46a9a1846002f07aafc42175b50c4a79" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>llama::mapping::AoS&lt; T_UserDomain, T_DatumDomain, T_LinearizeUserDomainAdressFunctor, T_ExtentUserDomainAdressFunctor &gt;::AoS</definition>
        <argsstring>(AoS const &amp;)=default</argsstring>
        <name>AoS</name>
        <param>
          <type><ref refid="structllama_1_1mapping_1_1AoS" kindref="compound">AoS</ref> const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexander/develop/work/llama/include/llama/mapping/AoS.hpp" line="50" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structllama_1_1mapping_1_1AoS_1a78c16173d62fb90dea007ee9d6738f6e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>llama::mapping::AoS&lt; T_UserDomain, T_DatumDomain, T_LinearizeUserDomainAdressFunctor, T_ExtentUserDomainAdressFunctor &gt;::AoS</definition>
        <argsstring>(AoS &amp;&amp;)=default</argsstring>
        <name>AoS</name>
        <param>
          <type><ref refid="structllama_1_1mapping_1_1AoS" kindref="compound">AoS</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexander/develop/work/llama/include/llama/mapping/AoS.hpp" line="51" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structllama_1_1mapping_1_1AoS_1a245f7ecbb94de16cb331677225d822c4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>llama::mapping::AoS&lt; T_UserDomain, T_DatumDomain, T_LinearizeUserDomainAdressFunctor, T_ExtentUserDomainAdressFunctor &gt;::~AoS</definition>
        <argsstring>()=default</argsstring>
        <name>~AoS</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexander/develop/work/llama/include/llama/mapping/AoS.hpp" line="52" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structllama_1_1mapping_1_1AoS_1a9725c67d7f779d29902a90e61d0c588b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto llama::mapping::AoS&lt; T_UserDomain, T_DatumDomain, T_LinearizeUserDomainAdressFunctor, T_ExtentUserDomainAdressFunctor &gt;::getBlobSize</definition>
        <argsstring>(std::size_t const) const -&gt; std::size_t</argsstring>
        <name>getBlobSize</name>
        <param>
          <type>std::size_t</type>
          <declname>const</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexander/develop/work/llama/include/llama/mapping/AoS.hpp" line="56" column="1" bodyfile="/home/alexander/develop/work/llama/include/llama/mapping/AoS.hpp" bodystart="56" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="structllama_1_1mapping_1_1AoS_1a88c6c53d0b528c45c493bc3ea2c5d9fc" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>std::size_t...</type>
            <declname>T_datumDomainCoord</declname>
            <defname>T_datumDomainCoord</defname>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto llama::mapping::AoS&lt; T_UserDomain, T_DatumDomain, T_LinearizeUserDomainAdressFunctor, T_ExtentUserDomainAdressFunctor &gt;::getBlobByte</definition>
        <argsstring>(UserDomain const coord) const -&gt; std::size_t</argsstring>
        <name>getBlobByte</name>
        <param>
          <type><ref refid="structllama_1_1mapping_1_1AoS_1aeaa14121b6e26b7be9306eda76ab9fb1" kindref="member">UserDomain</ref> const</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexander/develop/work/llama/include/llama/mapping/AoS.hpp" line="66" column="1" bodyfile="/home/alexander/develop/work/llama/include/llama/mapping/AoS.hpp" bodystart="66" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="structllama_1_1mapping_1_1AoS_1a26a3f5a39f87826ae6e3451719b6127b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>std::size_t...</type>
            <declname>T_datumDomainCoord</declname>
            <defname>T_datumDomainCoord</defname>
          </param>
        </templateparamlist>
        <type>constexpr auto</type>
        <definition>constexpr auto llama::mapping::AoS&lt; T_UserDomain, T_DatumDomain, T_LinearizeUserDomainAdressFunctor, T_ExtentUserDomainAdressFunctor &gt;::getBlobNr</definition>
        <argsstring>(UserDomain const coord) const -&gt; std::size_t</argsstring>
        <name>getBlobNr</name>
        <param>
          <type><ref refid="structllama_1_1mapping_1_1AoS_1aeaa14121b6e26b7be9306eda76ab9fb1" kindref="member">UserDomain</ref> const</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexander/develop/work/llama/include/llama/mapping/AoS.hpp" line="84" column="1" bodyfile="/home/alexander/develop/work/llama/include/llama/mapping/AoS.hpp" bodystart="84" bodyend="88"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/alexander/develop/work/llama/include/llama/mapping/AoS.hpp" line="39" column="1" bodyfile="/home/alexander/develop/work/llama/include/llama/mapping/AoS.hpp" bodystart="38" bodyend="90"/>
    <listofallmembers>
      <member refid="structllama_1_1mapping_1_1AoS_1ab85db3706e63e9bf45849f29234941cb" prot="public" virt="non-virtual"><scope>llama::mapping::AoS</scope><name>AoS</name></member>
      <member refid="structllama_1_1mapping_1_1AoS_1a2c1eeaa107bc149746164db4d900dd80" prot="public" virt="non-virtual"><scope>llama::mapping::AoS</scope><name>AoS</name></member>
      <member refid="structllama_1_1mapping_1_1AoS_1a46a9a1846002f07aafc42175b50c4a79" prot="public" virt="non-virtual"><scope>llama::mapping::AoS</scope><name>AoS</name></member>
      <member refid="structllama_1_1mapping_1_1AoS_1a78c16173d62fb90dea007ee9d6738f6e" prot="public" virt="non-virtual"><scope>llama::mapping::AoS</scope><name>AoS</name></member>
      <member refid="structllama_1_1mapping_1_1AoS_1ac976dd99145a8af1c2111fd725834b5d" prot="public" virt="non-virtual"><scope>llama::mapping::AoS</scope><name>blobCount</name></member>
      <member refid="structllama_1_1mapping_1_1AoS_1ae5d0c4673ed69f021273d80707042c54" prot="public" virt="non-virtual"><scope>llama::mapping::AoS</scope><name>DatumDomain</name></member>
      <member refid="structllama_1_1mapping_1_1AoS_1a88c6c53d0b528c45c493bc3ea2c5d9fc" prot="public" virt="non-virtual"><scope>llama::mapping::AoS</scope><name>getBlobByte</name></member>
      <member refid="structllama_1_1mapping_1_1AoS_1a26a3f5a39f87826ae6e3451719b6127b" prot="public" virt="non-virtual"><scope>llama::mapping::AoS</scope><name>getBlobNr</name></member>
      <member refid="structllama_1_1mapping_1_1AoS_1a9725c67d7f779d29902a90e61d0c588b" prot="public" virt="non-virtual"><scope>llama::mapping::AoS</scope><name>getBlobSize</name></member>
      <member refid="structllama_1_1mapping_1_1AoS_1aeaa14121b6e26b7be9306eda76ab9fb1" prot="public" virt="non-virtual"><scope>llama::mapping::AoS</scope><name>UserDomain</name></member>
      <member refid="structllama_1_1mapping_1_1AoS_1a199b3a9b77dcf9ea7b48a0edc7cdae30" prot="public" virt="non-virtual"><scope>llama::mapping::AoS</scope><name>userDomainSize</name></member>
      <member refid="structllama_1_1mapping_1_1AoS_1a245f7ecbb94de16cb331677225d822c4" prot="public" virt="non-virtual"><scope>llama::mapping::AoS</scope><name>~AoS</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
