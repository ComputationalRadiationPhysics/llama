<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structllama_1_1mapping_1_1One" kind="struct" language="C++" prot="public">
    <compoundname>llama::mapping::One</compoundname>
    <includes refid="One_8hpp" local="no">One.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename T_UserDomain</type>
      </param>
      <param>
        <type>typename T_DatumDomain</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structllama_1_1mapping_1_1One_1a32b0696edba60c598cccd346b2a7d9bf" prot="public" static="no">
        <type>T_UserDomain</type>
        <definition>using llama::mapping::One&lt; T_UserDomain, T_DatumDomain &gt;::UserDomain =  T_UserDomain</definition>
        <argsstring></argsstring>
        <name>UserDomain</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexander/develop/work/llama/include/llama/mapping/One.hpp" line="46" column="1" bodyfile="/home/alexander/develop/work/llama/include/llama/mapping/One.hpp" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structllama_1_1mapping_1_1One_1a1a71ba62bc01eb9e14d7b348433f4b7a" prot="public" static="no">
        <type>T_DatumDomain</type>
        <definition>using llama::mapping::One&lt; T_UserDomain, T_DatumDomain &gt;::DatumDomain =  T_DatumDomain</definition>
        <argsstring></argsstring>
        <name>DatumDomain</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexander/develop/work/llama/include/llama/mapping/One.hpp" line="47" column="1" bodyfile="/home/alexander/develop/work/llama/include/llama/mapping/One.hpp" bodystart="47" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="structllama_1_1mapping_1_1One_1a8f5407ab9384a236a7519e15d2201d39" prot="public" static="yes" mutable="no">
        <type>constexpr std::size_t</type>
        <definition>constexpr std::size_t llama::mapping::One&lt; T_UserDomain, T_DatumDomain &gt;::blobCount</definition>
        <argsstring></argsstring>
        <name>blobCount</name>
        <initializer>= 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexander/develop/work/llama/include/llama/mapping/One.hpp" line="48" column="1" bodyfile="/home/alexander/develop/work/llama/include/llama/mapping/One.hpp" bodystart="48" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structllama_1_1mapping_1_1One_1a12fff4ce47d5268a128cca94a122b1a1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto llama::mapping::One&lt; T_UserDomain, T_DatumDomain &gt;::getBlobSize</definition>
        <argsstring>(std::size_t const) const -&gt; std::size_t</argsstring>
        <name>getBlobSize</name>
        <param>
          <type>std::size_t</type>
          <declname>const</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexander/develop/work/llama/include/llama/mapping/One.hpp" line="52" column="1" bodyfile="/home/alexander/develop/work/llama/include/llama/mapping/One.hpp" bodystart="52" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="structllama_1_1mapping_1_1One_1a63a4c055d22f9f5ed0254180d0d5efa2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>std::size_t...</type>
            <declname>T_datumDomainCoord</declname>
            <defname>T_datumDomainCoord</defname>
          </param>
        </templateparamlist>
        <type>constexpr auto</type>
        <definition>constexpr auto llama::mapping::One&lt; T_UserDomain, T_DatumDomain &gt;::getBlobByte</definition>
        <argsstring>(UserDomain const coord) const -&gt; std::size_t</argsstring>
        <name>getBlobByte</name>
        <param>
          <type><ref refid="structllama_1_1mapping_1_1One_1a32b0696edba60c598cccd346b2a7d9bf" kindref="member">UserDomain</ref> const</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexander/develop/work/llama/include/llama/mapping/One.hpp" line="62" column="1" bodyfile="/home/alexander/develop/work/llama/include/llama/mapping/One.hpp" bodystart="62" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="structllama_1_1mapping_1_1One_1a11cd8d43e18e891042ffa4d8db742cf5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>std::size_t...</type>
            <declname>T_datumDomainCoord</declname>
            <defname>T_datumDomainCoord</defname>
          </param>
        </templateparamlist>
        <type>constexpr auto</type>
        <definition>constexpr auto llama::mapping::One&lt; T_UserDomain, T_DatumDomain &gt;::getBlobNr</definition>
        <argsstring>(UserDomain const coord) const -&gt; std::size_t</argsstring>
        <name>getBlobNr</name>
        <param>
          <type><ref refid="structllama_1_1mapping_1_1One_1a32b0696edba60c598cccd346b2a7d9bf" kindref="member">UserDomain</ref> const</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexander/develop/work/llama/include/llama/mapping/One.hpp" line="76" column="1" bodyfile="/home/alexander/develop/work/llama/include/llama/mapping/One.hpp" bodystart="76" bodyend="80"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Neither struct of array nor array of struct mapping as only exactly one element (in the user domain) can be mapped. If more than one element is tried to be mapped all virtual datums are mapped to the very same memory. This mapping is especially used for temporary views on the stack allocated with <ref refid="namespacellama_1a7e6d72ed44f9e4c51751940ef5ee8e65" kindref="member">tempAlloc</ref>. <parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T_UserDomain</parametername>
</parameternamelist>
<parameterdescription>
<para>type of the user domain, expected to have only element, although more are working (but doesn&apos;t make sense) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>T_DatumDomain</parametername>
</parameternamelist>
<parameterdescription>
<para>type of the datum domain </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="namespacellama_1a7e6d72ed44f9e4c51751940ef5ee8e65" kindref="member">tempAlloc</ref>, <ref refid="namespacellama_1a0497c2913f9ebb2cea9c97ddc35be349" kindref="member">OneOnStackFactory</ref>, <ref refid="structllama_1_1allocator_1_1Stack" kindref="compound">allocator::Stack</ref> </para></simplesect>
</para>    </detaileddescription>
    <location file="/home/alexander/develop/work/llama/include/llama/mapping/One.hpp" line="45" column="1" bodyfile="/home/alexander/develop/work/llama/include/llama/mapping/One.hpp" bodystart="44" bodyend="81"/>
    <listofallmembers>
      <member refid="structllama_1_1mapping_1_1One_1a8f5407ab9384a236a7519e15d2201d39" prot="public" virt="non-virtual"><scope>llama::mapping::One</scope><name>blobCount</name></member>
      <member refid="structllama_1_1mapping_1_1One_1a1a71ba62bc01eb9e14d7b348433f4b7a" prot="public" virt="non-virtual"><scope>llama::mapping::One</scope><name>DatumDomain</name></member>
      <member refid="structllama_1_1mapping_1_1One_1a63a4c055d22f9f5ed0254180d0d5efa2" prot="public" virt="non-virtual"><scope>llama::mapping::One</scope><name>getBlobByte</name></member>
      <member refid="structllama_1_1mapping_1_1One_1a11cd8d43e18e891042ffa4d8db742cf5" prot="public" virt="non-virtual"><scope>llama::mapping::One</scope><name>getBlobNr</name></member>
      <member refid="structllama_1_1mapping_1_1One_1a12fff4ce47d5268a128cca94a122b1a1" prot="public" virt="non-virtual"><scope>llama::mapping::One</scope><name>getBlobSize</name></member>
      <member refid="structllama_1_1mapping_1_1One_1a32b0696edba60c598cccd346b2a7d9bf" prot="public" virt="non-virtual"><scope>llama::mapping::One</scope><name>UserDomain</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
