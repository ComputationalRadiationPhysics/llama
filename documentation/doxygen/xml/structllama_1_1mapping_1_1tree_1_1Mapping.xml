<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structllama_1_1mapping_1_1tree_1_1Mapping" kind="struct" language="C++" prot="public">
    <compoundname>llama::mapping::tree::Mapping</compoundname>
    <includes refid="Mapping_8hpp" local="no">Mapping.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename T_UserDomain</type>
      </param>
      <param>
        <type>typename T_DatumDomain</type>
      </param>
      <param>
        <type>typename T_TreeOperationList</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structllama_1_1mapping_1_1tree_1_1Mapping_1a954f16c7d5c4f7907248f557eed7df7f" prot="public" static="no">
        <type>T_UserDomain</type>
        <definition>using llama::mapping::tree::Mapping&lt; T_UserDomain, T_DatumDomain, T_TreeOperationList &gt;::UserDomain =  T_UserDomain</definition>
        <argsstring></argsstring>
        <name>UserDomain</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexander/develop/work/llama/include/llama/mapping/tree/Mapping.hpp" line="62" column="1" bodyfile="/home/alexander/develop/work/llama/include/llama/mapping/tree/Mapping.hpp" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structllama_1_1mapping_1_1tree_1_1Mapping_1a7f302f43ebf3c02abbda83ab8fef956b" prot="public" static="no">
        <type>T_DatumDomain</type>
        <definition>using llama::mapping::tree::Mapping&lt; T_UserDomain, T_DatumDomain, T_TreeOperationList &gt;::DatumDomain =  T_DatumDomain</definition>
        <argsstring></argsstring>
        <name>DatumDomain</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexander/develop/work/llama/include/llama/mapping/tree/Mapping.hpp" line="63" column="1" bodyfile="/home/alexander/develop/work/llama/include/llama/mapping/tree/Mapping.hpp" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structllama_1_1mapping_1_1tree_1_1Mapping_1a3f40346f3374e9c192cd1f369b0e9f4f" prot="public" static="no">
        <type><ref refid="namespacellama_1_1mapping_1_1tree_1a257eba2e41a3508cc0d70fb0f9e30d24" kindref="member">TreeFromDomains</ref>&lt; <ref refid="structllama_1_1mapping_1_1tree_1_1Mapping_1a954f16c7d5c4f7907248f557eed7df7f" kindref="member">UserDomain</ref>, <ref refid="structllama_1_1mapping_1_1tree_1_1Mapping_1a7f302f43ebf3c02abbda83ab8fef956b" kindref="member">DatumDomain</ref> &gt;</type>
        <definition>using llama::mapping::tree::Mapping&lt; T_UserDomain, T_DatumDomain, T_TreeOperationList &gt;::BasicTree =  TreeFromDomains&lt; UserDomain, DatumDomain &gt;</definition>
        <argsstring></argsstring>
        <name>BasicTree</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexander/develop/work/llama/include/llama/mapping/tree/Mapping.hpp" line="64" column="1" bodyfile="/home/alexander/develop/work/llama/include/llama/mapping/tree/Mapping.hpp" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structllama_1_1mapping_1_1tree_1_1Mapping_1a4e3bd449a13688c05dfae967373dd07a" prot="public" static="no">
        <type><ref refid="structllama_1_1mapping_1_1tree_1_1MergeFunctors" kindref="compound">MergeFunctors</ref>&lt; <ref refid="structllama_1_1mapping_1_1tree_1_1Mapping_1a3f40346f3374e9c192cd1f369b0e9f4f" kindref="member">BasicTree</ref>, T_TreeOperationList &gt;</type>
        <definition>using llama::mapping::tree::Mapping&lt; T_UserDomain, T_DatumDomain, T_TreeOperationList &gt;::MergedFunctors =  MergeFunctors&lt; BasicTree, T_TreeOperationList &gt;</definition>
        <argsstring></argsstring>
        <name>MergedFunctors</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexander/develop/work/llama/include/llama/mapping/tree/Mapping.hpp" line="71" column="1" bodyfile="/home/alexander/develop/work/llama/include/llama/mapping/tree/Mapping.hpp" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structllama_1_1mapping_1_1tree_1_1Mapping_1a39d0ffcc98b72f16c512aa92c3f47fdf" prot="public" static="no">
        <type>typename <ref refid="structllama_1_1mapping_1_1tree_1_1MergeFunctors_1ae46742ab330445a7f3209566564300e6" kindref="member">MergedFunctors::Result</ref></type>
        <definition>using llama::mapping::tree::Mapping&lt; T_UserDomain, T_DatumDomain, T_TreeOperationList &gt;::ResultTree =  typename MergedFunctors::Result</definition>
        <argsstring></argsstring>
        <name>ResultTree</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexander/develop/work/llama/include/llama/mapping/tree/Mapping.hpp" line="76" column="1" bodyfile="/home/alexander/develop/work/llama/include/llama/mapping/tree/Mapping.hpp" bodystart="76" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="structllama_1_1mapping_1_1tree_1_1Mapping_1acffec5b9be7d47ec4257d24efb3104c4" prot="public" static="yes" mutable="no">
        <type>constexpr std::size_t</type>
        <definition>constexpr std::size_t llama::mapping::tree::Mapping&lt; T_UserDomain, T_DatumDomain, T_TreeOperationList &gt;::blobCount</definition>
        <argsstring></argsstring>
        <name>blobCount</name>
        <initializer>= 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexander/develop/work/llama/include/llama/mapping/tree/Mapping.hpp" line="69" column="1" bodyfile="/home/alexander/develop/work/llama/include/llama/mapping/tree/Mapping.hpp" bodystart="69" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structllama_1_1mapping_1_1tree_1_1Mapping_1a697494268a8b808dcc2bf739b6824026" prot="public" static="no" mutable="no">
        <type><ref refid="structllama_1_1mapping_1_1tree_1_1Mapping_1a954f16c7d5c4f7907248f557eed7df7f" kindref="member">UserDomain</ref> const</type>
        <definition>UserDomain const llama::mapping::tree::Mapping&lt; T_UserDomain, T_DatumDomain, T_TreeOperationList &gt;::userDomainSize</definition>
        <argsstring></argsstring>
        <name>userDomainSize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexander/develop/work/llama/include/llama/mapping/tree/Mapping.hpp" line="78" column="1" bodyfile="/home/alexander/develop/work/llama/include/llama/mapping/tree/Mapping.hpp" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structllama_1_1mapping_1_1tree_1_1Mapping_1a1f99ae9cd8cf19760336c9445e9ff406" prot="public" static="no" mutable="no">
        <type><ref refid="structllama_1_1mapping_1_1tree_1_1Mapping_1a3f40346f3374e9c192cd1f369b0e9f4f" kindref="member">BasicTree</ref> const</type>
        <definition>BasicTree const llama::mapping::tree::Mapping&lt; T_UserDomain, T_DatumDomain, T_TreeOperationList &gt;::basicTree</definition>
        <argsstring></argsstring>
        <name>basicTree</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexander/develop/work/llama/include/llama/mapping/tree/Mapping.hpp" line="79" column="1" bodyfile="/home/alexander/develop/work/llama/include/llama/mapping/tree/Mapping.hpp" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structllama_1_1mapping_1_1tree_1_1Mapping_1a334ec85af94a5e3570751c39a3aeeaac" prot="public" static="no" mutable="no">
        <type><ref refid="structllama_1_1mapping_1_1tree_1_1Mapping_1a4e3bd449a13688c05dfae967373dd07a" kindref="member">MergedFunctors</ref> const</type>
        <definition>MergedFunctors const llama::mapping::tree::Mapping&lt; T_UserDomain, T_DatumDomain, T_TreeOperationList &gt;::mergedFunctors</definition>
        <argsstring></argsstring>
        <name>mergedFunctors</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexander/develop/work/llama/include/llama/mapping/tree/Mapping.hpp" line="80" column="1" bodyfile="/home/alexander/develop/work/llama/include/llama/mapping/tree/Mapping.hpp" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structllama_1_1mapping_1_1tree_1_1Mapping_1a627d4758412f223babf0245961e0bd06" prot="public" static="no" mutable="no">
        <type><ref refid="structllama_1_1mapping_1_1tree_1_1Mapping_1a39d0ffcc98b72f16c512aa92c3f47fdf" kindref="member">ResultTree</ref> const</type>
        <definition>ResultTree const llama::mapping::tree::Mapping&lt; T_UserDomain, T_DatumDomain, T_TreeOperationList &gt;::resultTree</definition>
        <argsstring></argsstring>
        <name>resultTree</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexander/develop/work/llama/include/llama/mapping/tree/Mapping.hpp" line="81" column="1" bodyfile="/home/alexander/develop/work/llama/include/llama/mapping/tree/Mapping.hpp" bodystart="81" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structllama_1_1mapping_1_1tree_1_1Mapping_1a3ce26aa899e8b68fd043bd13a593effa" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>llama::mapping::tree::Mapping&lt; T_UserDomain, T_DatumDomain, T_TreeOperationList &gt;::Mapping</definition>
        <argsstring>(UserDomain const size, T_TreeOperationList const treeOperationList)</argsstring>
        <name>Mapping</name>
        <param>
          <type><ref refid="structllama_1_1mapping_1_1tree_1_1Mapping_1a954f16c7d5c4f7907248f557eed7df7f" kindref="member">UserDomain</ref> const</type>
          <declname>size</declname>
        </param>
        <param>
          <type>T_TreeOperationList const</type>
          <declname>treeOperationList</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The initalization of this mapping needs a <ref refid="structllama_1_1Tuple" kindref="compound">Tuple</ref> of operations which describe the mapping in detail. Please have a look at the user documenation for more information. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>the size of the user domain </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>treeOperationList</parametername>
</parameternamelist>
<parameterdescription>
<para>list of operations to define the mapping, e.g. <ref refid="structllama_1_1mapping_1_1tree_1_1functor_1_1Idem" kindref="compound">functor::Idem</ref>, <ref refid="structllama_1_1mapping_1_1tree_1_1functor_1_1LeafOnlyRT" kindref="compound">functor::LeafOnlyRT</ref>, <ref refid="structllama_1_1mapping_1_1tree_1_1functor_1_1MoveRTDown" kindref="compound">functor::MoveRTDown</ref>. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexander/develop/work/llama/include/llama/mapping/tree/Mapping.hpp" line="91" column="1" bodyfile="/home/alexander/develop/work/llama/include/llama/mapping/tree/Mapping.hpp" bodystart="91" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="structllama_1_1mapping_1_1tree_1_1Mapping_1aec5a484d82e7b874928b465da97ab8ed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>llama::mapping::tree::Mapping&lt; T_UserDomain, T_DatumDomain, T_TreeOperationList &gt;::Mapping</definition>
        <argsstring>()=default</argsstring>
        <name>Mapping</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexander/develop/work/llama/include/llama/mapping/tree/Mapping.hpp" line="104" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structllama_1_1mapping_1_1tree_1_1Mapping_1a13780f8c0b7dd2bb23cef8553797d2d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>llama::mapping::tree::Mapping&lt; T_UserDomain, T_DatumDomain, T_TreeOperationList &gt;::Mapping</definition>
        <argsstring>(Mapping const &amp;)=default</argsstring>
        <name>Mapping</name>
        <param>
          <type><ref refid="structllama_1_1mapping_1_1tree_1_1Mapping" kindref="compound">Mapping</ref> const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexander/develop/work/llama/include/llama/mapping/tree/Mapping.hpp" line="105" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structllama_1_1mapping_1_1tree_1_1Mapping_1a326f83d0722d12168393a10ca5398adc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>llama::mapping::tree::Mapping&lt; T_UserDomain, T_DatumDomain, T_TreeOperationList &gt;::Mapping</definition>
        <argsstring>(Mapping &amp;&amp;)=default</argsstring>
        <name>Mapping</name>
        <param>
          <type><ref refid="structllama_1_1mapping_1_1tree_1_1Mapping" kindref="compound">Mapping</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexander/develop/work/llama/include/llama/mapping/tree/Mapping.hpp" line="106" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structllama_1_1mapping_1_1tree_1_1Mapping_1a911d23012410a1550c9ed00045f3f23d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>llama::mapping::tree::Mapping&lt; T_UserDomain, T_DatumDomain, T_TreeOperationList &gt;::~Mapping</definition>
        <argsstring>()=default</argsstring>
        <name>~Mapping</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexander/develop/work/llama/include/llama/mapping/tree/Mapping.hpp" line="107" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structllama_1_1mapping_1_1tree_1_1Mapping_1a14272c4e62bdec2e7f3d223fd844ab94" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto llama::mapping::tree::Mapping&lt; T_UserDomain, T_DatumDomain, T_TreeOperationList &gt;::getBlobSize</definition>
        <argsstring>(std::size_t const) const -&gt; std::size_t</argsstring>
        <name>getBlobSize</name>
        <param>
          <type>std::size_t</type>
          <declname>const</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexander/develop/work/llama/include/llama/mapping/tree/Mapping.hpp" line="111" column="1" bodyfile="/home/alexander/develop/work/llama/include/llama/mapping/tree/Mapping.hpp" bodystart="111" bodyend="115"/>
      </memberdef>
      <memberdef kind="function" id="structllama_1_1mapping_1_1tree_1_1Mapping_1af2213e6185552864868ef45d700c5270" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>std::size_t...</type>
            <declname>T_datumDomainCoord</declname>
            <defname>T_datumDomainCoord</defname>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto llama::mapping::tree::Mapping&lt; T_UserDomain, T_DatumDomain, T_TreeOperationList &gt;::getBlobByte</definition>
        <argsstring>(UserDomain const coord) const -&gt; std::size_t</argsstring>
        <name>getBlobByte</name>
        <param>
          <type><ref refid="structllama_1_1mapping_1_1tree_1_1Mapping_1a954f16c7d5c4f7907248f557eed7df7f" kindref="member">UserDomain</ref> const</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexander/develop/work/llama/include/llama/mapping/tree/Mapping.hpp" line="120" column="1" bodyfile="/home/alexander/develop/work/llama/include/llama/mapping/tree/Mapping.hpp" bodystart="120" bodyend="136"/>
      </memberdef>
      <memberdef kind="function" id="structllama_1_1mapping_1_1tree_1_1Mapping_1ad0fe0fc830ccb9f196468939173b5030" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>std::size_t...</type>
            <declname>T_datumDomainCoord</declname>
            <defname>T_datumDomainCoord</defname>
          </param>
        </templateparamlist>
        <type>constexpr auto</type>
        <definition>constexpr auto llama::mapping::tree::Mapping&lt; T_UserDomain, T_DatumDomain, T_TreeOperationList &gt;::getBlobNr</definition>
        <argsstring>(UserDomain const coord) const -&gt; std::size_t</argsstring>
        <name>getBlobNr</name>
        <param>
          <type><ref refid="structllama_1_1mapping_1_1tree_1_1Mapping_1a954f16c7d5c4f7907248f557eed7df7f" kindref="member">UserDomain</ref> const</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexander/develop/work/llama/include/llama/mapping/tree/Mapping.hpp" line="142" column="1" bodyfile="/home/alexander/develop/work/llama/include/llama/mapping/tree/Mapping.hpp" bodystart="142" bodyend="146"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Free describable mapping which can be used for creating a <ref refid="structllama_1_1View" kindref="compound">View</ref> with a <ref refid="structllama_1_1Factory" kindref="compound">Factory</ref>. For the interface details see <ref refid="structllama_1_1Factory" kindref="compound">Factory</ref>. <parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T_UserDomain</parametername>
</parameternamelist>
<parameterdescription>
<para>type of the user domain </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>T_DatumDomain</parametername>
</parameternamelist>
<parameterdescription>
<para>type of the datum domain </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>T_TreeOperationList</parametername>
</parameternamelist>
<parameterdescription>
<para>the type of a compile time list (<ref refid="structllama_1_1Tuple" kindref="compound">Tuple</ref>) used to define the tree mapping </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>    </detaileddescription>
    <collaborationgraph>
      <node id="200">
        <label>llama::mapping::tree::MergeFunctors&lt; T_Tree, T_TreeOperationList &gt;</label>
        <link refid="structllama_1_1mapping_1_1tree_1_1MergeFunctors"/>
      </node>
      <node id="199">
        <label>llama::mapping::tree::Mapping&lt; T_UserDomain, T_DatumDomain, T_TreeOperationList &gt;</label>
        <link refid="structllama_1_1mapping_1_1tree_1_1Mapping"/>
        <childnode refid="200" relation="usage">
          <edgelabel>mergedFunctors</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/alexander/develop/work/llama/include/llama/mapping/tree/Mapping.hpp" line="61" column="1" bodyfile="/home/alexander/develop/work/llama/include/llama/mapping/tree/Mapping.hpp" bodystart="60" bodyend="147"/>
    <listofallmembers>
      <member refid="structllama_1_1mapping_1_1tree_1_1Mapping_1a3f40346f3374e9c192cd1f369b0e9f4f" prot="public" virt="non-virtual"><scope>llama::mapping::tree::Mapping</scope><name>BasicTree</name></member>
      <member refid="structllama_1_1mapping_1_1tree_1_1Mapping_1a1f99ae9cd8cf19760336c9445e9ff406" prot="public" virt="non-virtual"><scope>llama::mapping::tree::Mapping</scope><name>basicTree</name></member>
      <member refid="structllama_1_1mapping_1_1tree_1_1Mapping_1acffec5b9be7d47ec4257d24efb3104c4" prot="public" virt="non-virtual"><scope>llama::mapping::tree::Mapping</scope><name>blobCount</name></member>
      <member refid="structllama_1_1mapping_1_1tree_1_1Mapping_1a7f302f43ebf3c02abbda83ab8fef956b" prot="public" virt="non-virtual"><scope>llama::mapping::tree::Mapping</scope><name>DatumDomain</name></member>
      <member refid="structllama_1_1mapping_1_1tree_1_1Mapping_1af2213e6185552864868ef45d700c5270" prot="public" virt="non-virtual"><scope>llama::mapping::tree::Mapping</scope><name>getBlobByte</name></member>
      <member refid="structllama_1_1mapping_1_1tree_1_1Mapping_1ad0fe0fc830ccb9f196468939173b5030" prot="public" virt="non-virtual"><scope>llama::mapping::tree::Mapping</scope><name>getBlobNr</name></member>
      <member refid="structllama_1_1mapping_1_1tree_1_1Mapping_1a14272c4e62bdec2e7f3d223fd844ab94" prot="public" virt="non-virtual"><scope>llama::mapping::tree::Mapping</scope><name>getBlobSize</name></member>
      <member refid="structllama_1_1mapping_1_1tree_1_1Mapping_1a3ce26aa899e8b68fd043bd13a593effa" prot="public" virt="non-virtual"><scope>llama::mapping::tree::Mapping</scope><name>Mapping</name></member>
      <member refid="structllama_1_1mapping_1_1tree_1_1Mapping_1aec5a484d82e7b874928b465da97ab8ed" prot="public" virt="non-virtual"><scope>llama::mapping::tree::Mapping</scope><name>Mapping</name></member>
      <member refid="structllama_1_1mapping_1_1tree_1_1Mapping_1a13780f8c0b7dd2bb23cef8553797d2d4" prot="public" virt="non-virtual"><scope>llama::mapping::tree::Mapping</scope><name>Mapping</name></member>
      <member refid="structllama_1_1mapping_1_1tree_1_1Mapping_1a326f83d0722d12168393a10ca5398adc" prot="public" virt="non-virtual"><scope>llama::mapping::tree::Mapping</scope><name>Mapping</name></member>
      <member refid="structllama_1_1mapping_1_1tree_1_1Mapping_1a334ec85af94a5e3570751c39a3aeeaac" prot="public" virt="non-virtual"><scope>llama::mapping::tree::Mapping</scope><name>mergedFunctors</name></member>
      <member refid="structllama_1_1mapping_1_1tree_1_1Mapping_1a4e3bd449a13688c05dfae967373dd07a" prot="public" virt="non-virtual"><scope>llama::mapping::tree::Mapping</scope><name>MergedFunctors</name></member>
      <member refid="structllama_1_1mapping_1_1tree_1_1Mapping_1a39d0ffcc98b72f16c512aa92c3f47fdf" prot="public" virt="non-virtual"><scope>llama::mapping::tree::Mapping</scope><name>ResultTree</name></member>
      <member refid="structllama_1_1mapping_1_1tree_1_1Mapping_1a627d4758412f223babf0245961e0bd06" prot="public" virt="non-virtual"><scope>llama::mapping::tree::Mapping</scope><name>resultTree</name></member>
      <member refid="structllama_1_1mapping_1_1tree_1_1Mapping_1a954f16c7d5c4f7907248f557eed7df7f" prot="public" virt="non-virtual"><scope>llama::mapping::tree::Mapping</scope><name>UserDomain</name></member>
      <member refid="structllama_1_1mapping_1_1tree_1_1Mapping_1a697494268a8b808dcc2bf739b6824026" prot="public" virt="non-virtual"><scope>llama::mapping::tree::Mapping</scope><name>userDomainSize</name></member>
      <member refid="structllama_1_1mapping_1_1tree_1_1Mapping_1a911d23012410a1550c9ed00045f3f23d" prot="public" virt="non-virtual"><scope>llama::mapping::tree::Mapping</scope><name>~Mapping</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
