<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structllama_1_1mapping_1_1tree_1_1ToString_3_01Tuple_3_01T__First_00_01T__Second_00_01T__Rest_8_8_8_01_4_4" kind="struct" language="C++" prot="public">
    <compoundname>llama::mapping::tree::ToString&lt; Tuple&lt; T_First, T_Second, T_Rest... &gt;&gt;</compoundname>
    <includes refid="toString_8hpp" local="no">toString.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename T_First</type>
      </param>
      <param>
        <type>typename T_Second</type>
      </param>
      <param>
        <type>typename...</type>
        <declname>T_Rest</declname>
        <defname>T_Rest</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structllama_1_1mapping_1_1tree_1_1ToString_3_01Tuple_3_01T__First_00_01T__Second_00_01T__Rest_8_8_8_01_4_4_1af27d90a65b6259126094bbec7f8c0138" prot="public" static="no">
        <type><ref refid="structllama_1_1Tuple" kindref="compound">Tuple</ref>&lt; T_First, T_Second, T_Rest... &gt;</type>
        <definition>using llama::mapping::tree::ToString&lt; Tuple&lt; T_First, T_Second, T_Rest... &gt;&gt;::Tree =  Tuple&lt; T_First, T_Second, T_Rest... &gt;</definition>
        <argsstring></argsstring>
        <name>Tree</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexander/develop/work/llama/include/llama/mapping/tree/toString.hpp" line="103" column="1" bodyfile="/home/alexander/develop/work/llama/include/llama/mapping/tree/toString.hpp" bodystart="107" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structllama_1_1mapping_1_1tree_1_1ToString_3_01Tuple_3_01T__First_00_01T__Second_00_01T__Rest_8_8_8_01_4_4_1a1b0e958663aaf8e11bd413c4cea51a8c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto llama::mapping::tree::ToString&lt; Tuple&lt; T_First, T_Second, T_Rest... &gt;&gt;::operator()</definition>
        <argsstring>(const Tree tree) -&gt; std::string</argsstring>
        <name>operator()</name>
        <param>
          <type>const <ref refid="structllama_1_1mapping_1_1tree_1_1ToString_3_01Tuple_3_01T__First_00_01T__Second_00_01T__Rest_8_8_8_01_4_4_1af27d90a65b6259126094bbec7f8c0138" kindref="member">Tree</ref></type>
          <declname>tree</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexander/develop/work/llama/include/llama/mapping/tree/toString.hpp" line="109" column="1" bodyfile="/home/alexander/develop/work/llama/include/llama/mapping/tree/toString.hpp" bodystart="109" bodyend="120"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/alexander/develop/work/llama/include/llama/mapping/tree/toString.hpp" line="102" column="1" bodyfile="/home/alexander/develop/work/llama/include/llama/mapping/tree/toString.hpp" bodystart="95" bodyend="121"/>
    <listofallmembers>
      <member refid="structllama_1_1mapping_1_1tree_1_1ToString_3_01Tuple_3_01T__First_00_01T__Second_00_01T__Rest_8_8_8_01_4_4_1a1b0e958663aaf8e11bd413c4cea51a8c" prot="public" virt="non-virtual"><scope>llama::mapping::tree::ToString&lt; Tuple&lt; T_First, T_Second, T_Rest... &gt;&gt;</scope><name>operator()</name></member>
      <member refid="structllama_1_1mapping_1_1tree_1_1ToString_3_01Tuple_3_01T__First_00_01T__Second_00_01T__Rest_8_8_8_01_4_4_1af27d90a65b6259126094bbec7f8c0138" prot="public" virt="non-virtual"><scope>llama::mapping::tree::ToString&lt; Tuple&lt; T_First, T_Second, T_Rest... &gt;&gt;</scope><name>Tree</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
