<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structllama_1_1mapping_1_1tree_1_1TreePopFrontChild" kind="struct" language="C++" prot="public">
    <compoundname>llama::mapping::tree::TreePopFrontChild</compoundname>
    <includes refid="TreeElement_8hpp" local="no">TreeElement.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename</type>
        <declname>T_Tree</declname>
        <defname>T_Tree</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structllama_1_1mapping_1_1tree_1_1TreePopFrontChild_1a4082157eed6cd2a975c81eb619a04e99" prot="public" static="no">
        <type><ref refid="structllama_1_1mapping_1_1tree_1_1TreeElement" kindref="compound">TreeElement</ref>&lt; typename T_Tree::Identifier, typename T_Tree::Type::RestTuple &gt;</type>
        <definition>using llama::mapping::tree::TreePopFrontChild&lt; T_Tree &gt;::ResultType =  TreeElement&lt; typename T_Tree::Identifier, typename T_Tree::Type::RestTuple &gt;</definition>
        <argsstring></argsstring>
        <name>ResultType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexander/develop/work/llama/include/llama/mapping/tree/TreeElement.hpp" line="190" column="1" bodyfile="/home/alexander/develop/work/llama/include/llama/mapping/tree/TreeElement.hpp" bodystart="193" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structllama_1_1mapping_1_1tree_1_1TreePopFrontChild_1a6bbd282451dd9e8f5db5010fd19d41f5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto llama::mapping::tree::TreePopFrontChild&lt; T_Tree &gt;::operator()</definition>
        <argsstring>(T_Tree const &amp;tree) -&gt; ResultType</argsstring>
        <name>operator()</name>
        <param>
          <type>T_Tree const &amp;</type>
          <declname>tree</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexander/develop/work/llama/include/llama/mapping/tree/TreeElement.hpp" line="197" column="1" bodyfile="/home/alexander/develop/work/llama/include/llama/mapping/tree/TreeElement.hpp" bodystart="197" bodyend="204"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/alexander/develop/work/llama/include/llama/mapping/tree/TreeElement.hpp" line="189" column="1" bodyfile="/home/alexander/develop/work/llama/include/llama/mapping/tree/TreeElement.hpp" bodystart="188" bodyend="205"/>
    <listofallmembers>
      <member refid="structllama_1_1mapping_1_1tree_1_1TreePopFrontChild_1a6bbd282451dd9e8f5db5010fd19d41f5" prot="public" virt="non-virtual"><scope>llama::mapping::tree::TreePopFrontChild</scope><name>operator()</name></member>
      <member refid="structllama_1_1mapping_1_1tree_1_1TreePopFrontChild_1a4082157eed6cd2a975c81eb619a04e99" prot="public" virt="non-virtual"><scope>llama::mapping::tree::TreePopFrontChild</scope><name>ResultType</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
