<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structllama_1_1mapping_1_1tree_1_1functor_1_1LeafOnlyRT" kind="struct" language="C++" prot="public">
    <compoundname>llama::mapping::tree::functor::LeafOnlyRT</compoundname>
    <includes refid="LeafOnlyRT_8hpp" local="no">LeafOnlyRT.hpp</includes>
    <innerclass refid="structllama_1_1mapping_1_1tree_1_1functor_1_1LeafOnlyRT_1_1BasicCoordToResultCoordImpl" prot="public">llama::mapping::tree::functor::LeafOnlyRT::BasicCoordToResultCoordImpl</innerclass>
    <innerclass refid="structllama_1_1mapping_1_1tree_1_1functor_1_1LeafOnlyRT_1_1BasicCoordToResultCoordImpl_3_01T__Trc35619b4f4d52f5d47b1afff871d9f4d" prot="public">llama::mapping::tree::functor::LeafOnlyRT::BasicCoordToResultCoordImpl&lt; T_Tree, Tuple&lt; T_LastCoord &gt; &gt;</innerclass>
    <innerclass refid="structllama_1_1mapping_1_1tree_1_1functor_1_1LeafOnlyRT_1_1BasicToResultImpl" prot="public">llama::mapping::tree::functor::LeafOnlyRT::BasicToResultImpl</innerclass>
    <innerclass refid="structllama_1_1mapping_1_1tree_1_1functor_1_1LeafOnlyRT_1_1BasicToResultImpl_3_01T__Tree_00_01tycdd910677a5629f3d2911b482860232d" prot="public">llama::mapping::tree::functor::LeafOnlyRT::BasicToResultImpl&lt; T_Tree, typename T_Tree::IsTreeElementWithChilds &gt;</innerclass>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structllama_1_1mapping_1_1tree_1_1functor_1_1LeafOnlyRT_1a12f47086a5d12fc60ab2ef1b0dee226f" prot="public" static="no">
        <type>decltype(<ref refid="structllama_1_1mapping_1_1tree_1_1functor_1_1LeafOnlyRT_1_1BasicToResultImpl" kindref="compound">BasicToResultImpl</ref>&lt; T_Tree &gt;()(T_Tree()))</type>
        <definition>using llama::mapping::tree::functor::LeafOnlyRT::Result =  decltype( BasicToResultImpl&lt; T_Tree &gt;() ( T_Tree() ) )</definition>
        <argsstring></argsstring>
        <name>Result</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexander/develop/work/llama/include/llama/mapping/tree/functor/LeafOnlyRT.hpp" line="140" column="1" bodyfile="/home/alexander/develop/work/llama/include/llama/mapping/tree/functor/LeafOnlyRT.hpp" bodystart="142" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structllama_1_1mapping_1_1tree_1_1functor_1_1LeafOnlyRT_1a839657c36258390dd8df9c2993b45b79" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T_Tree</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto llama::mapping::tree::functor::LeafOnlyRT::basicToResult</definition>
        <argsstring>(T_Tree const tree) const -&gt; decltype(BasicToResultImpl&lt; T_Tree &gt;()(tree))</argsstring>
        <name>basicToResult</name>
        <param>
          <type>T_Tree const</type>
          <declname>tree</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexander/develop/work/llama/include/llama/mapping/tree/functor/LeafOnlyRT.hpp" line="131" column="1" bodyfile="/home/alexander/develop/work/llama/include/llama/mapping/tree/functor/LeafOnlyRT.hpp" bodystart="131" bodyend="137"/>
      </memberdef>
      <memberdef kind="function" id="structllama_1_1mapping_1_1tree_1_1functor_1_1LeafOnlyRT_1a94fe30d05dcb0468634a9a56f4ce6728" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T_Tree</type>
          </param>
          <param>
            <type>typename T_BasicCoord</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto llama::mapping::tree::functor::LeafOnlyRT::basicCoordToResultCoord</definition>
        <argsstring>(T_BasicCoord const &amp;basicCoord, T_Tree const &amp;tree) const -&gt; decltype(BasicCoordToResultCoordImpl&lt; T_Tree, T_BasicCoord &gt;()(basicCoord, tree))</argsstring>
        <name>basicCoordToResultCoord</name>
        <param>
          <type>T_BasicCoord const &amp;</type>
          <declname>basicCoord</declname>
        </param>
        <param>
          <type>T_Tree const &amp;</type>
          <declname>tree</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexander/develop/work/llama/include/llama/mapping/tree/functor/LeafOnlyRT.hpp" line="254" column="1" bodyfile="/home/alexander/develop/work/llama/include/llama/mapping/tree/functor/LeafOnlyRT.hpp" bodystart="254" bodyend="275"/>
      </memberdef>
      <memberdef kind="function" id="structllama_1_1mapping_1_1tree_1_1functor_1_1LeafOnlyRT_1a095a97bbc4a4933e506a778745ced2c4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T_Tree</type>
          </param>
          <param>
            <type>typename T_ResultCoord</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto llama::mapping::tree::functor::LeafOnlyRT::resultCoordToBasicCoord</definition>
        <argsstring>(T_ResultCoord const &amp;resultCoord, T_Tree const &amp;tree) const -&gt; T_ResultCoord</argsstring>
        <name>resultCoordToBasicCoord</name>
        <param>
          <type>T_ResultCoord const &amp;</type>
          <declname>resultCoord</declname>
        </param>
        <param>
          <type>T_Tree const &amp;</type>
          <declname>tree</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexander/develop/work/llama/include/llama/mapping/tree/functor/LeafOnlyRT.hpp" line="283" column="1" bodyfile="/home/alexander/develop/work/llama/include/llama/mapping/tree/functor/LeafOnlyRT.hpp" bodystart="283" bodyend="290"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/alexander/develop/work/llama/include/llama/mapping/tree/functor/LeafOnlyRT.hpp" line="37" column="1" bodyfile="/home/alexander/develop/work/llama/include/llama/mapping/tree/functor/LeafOnlyRT.hpp" bodystart="36" bodyend="291"/>
    <listofallmembers>
      <member refid="structllama_1_1mapping_1_1tree_1_1functor_1_1LeafOnlyRT_1a94fe30d05dcb0468634a9a56f4ce6728" prot="public" virt="non-virtual"><scope>llama::mapping::tree::functor::LeafOnlyRT</scope><name>basicCoordToResultCoord</name></member>
      <member refid="structllama_1_1mapping_1_1tree_1_1functor_1_1LeafOnlyRT_1a839657c36258390dd8df9c2993b45b79" prot="public" virt="non-virtual"><scope>llama::mapping::tree::functor::LeafOnlyRT</scope><name>basicToResult</name></member>
      <member refid="structllama_1_1mapping_1_1tree_1_1functor_1_1LeafOnlyRT_1a12f47086a5d12fc60ab2ef1b0dee226f" prot="public" virt="non-virtual"><scope>llama::mapping::tree::functor::LeafOnlyRT</scope><name>Result</name></member>
      <member refid="structllama_1_1mapping_1_1tree_1_1functor_1_1LeafOnlyRT_1a095a97bbc4a4933e506a778745ced2c4" prot="public" virt="non-virtual"><scope>llama::mapping::tree::functor::LeafOnlyRT</scope><name>resultCoordToBasicCoord</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
