<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structllama_1_1mapping_1_1tree_1_1operations_1_1internal_1_1ChangeNodeChildsRuntime_3_01T__Tree_12068393b0afc588a197e0c682762ac3" kind="struct" language="C++" prot="public">
    <compoundname>llama::mapping::tree::operations::internal::ChangeNodeChildsRuntime&lt; T_Tree, T_Operation, T_TreeCoord, typename T_Tree::IsTreeElementWithChilds &gt;</compoundname>
    <includes refid="ChangeNodeRuntime_8hpp" local="no">ChangeNodeRuntime.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename T_Tree</type>
      </param>
      <param>
        <type>template&lt; class, class &gt; class</type>
        <declname>T_Operation</declname>
        <defname>T_Operation</defname>
      </param>
      <param>
        <type>typename T_TreeCoord</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structllama_1_1mapping_1_1tree_1_1operations_1_1internal_1_1ChangeNodeChildsRuntime_3_01T__Tree_12068393b0afc588a197e0c682762ac3_1a822beeeec49d6dc35614770108172d11" prot="public" static="no">
        <type><ref refid="structllama_1_1mapping_1_1tree_1_1TreeElement" kindref="compound">TreeElement</ref>&lt; typename T_Tree::Identifier, decltype(<ref refid="namespacellama_1af366894d19a93f206cac71e5e6ca7a8d" kindref="member">tupleReplace</ref>&lt; T_TreeCoord::FirstElement::compiletime &gt;(T_Tree().childs, <ref refid="structllama_1_1mapping_1_1tree_1_1operations_1_1internal_1_1ChangeNodeChildsRuntime" kindref="compound">ChangeNodeChildsRuntime</ref>&lt; <ref refid="namespacellama_1aa3255f46d3b3fbcd50ca0d002dfc279c" kindref="member">GetTupleType</ref>&lt; typename T_Tree::Type, T_TreeCoord::FirstElement::compiletime &gt;, T_Operation, typename T_TreeCoord::RestTuple &gt;()(<ref refid="namespacellama_1a06631de361c03d428287f53c817c880d" kindref="member">getTupleElement</ref>&lt; T_TreeCoord::FirstElement::compiletime &gt;(T_Tree().childs), 0))) &gt;</type>
        <definition>using llama::mapping::tree::operations::internal::ChangeNodeChildsRuntime&lt; T_Tree, T_Operation, T_TreeCoord, typename T_Tree::IsTreeElementWithChilds &gt;::ResultType =  TreeElement&lt; typename T_Tree::Identifier, decltype( tupleReplace&lt; T_TreeCoord::FirstElement::compiletime &gt;( T_Tree().childs, ChangeNodeChildsRuntime&lt; GetTupleType&lt; typename T_Tree::Type, T_TreeCoord::FirstElement::compiletime &gt;, T_Operation, typename T_TreeCoord::RestTuple &gt;()( getTupleElement&lt; T_TreeCoord::FirstElement::compiletime &gt; ( T_Tree().childs ), 0 ) ) ) &gt;</definition>
        <argsstring></argsstring>
        <name>ResultType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexander/develop/work/llama/include/llama/mapping/tree/operations/ChangeNodeRuntime.hpp" line="209" column="1" bodyfile="/home/alexander/develop/work/llama/include/llama/mapping/tree/operations/ChangeNodeRuntime.hpp" bodystart="231" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structllama_1_1mapping_1_1tree_1_1operations_1_1internal_1_1ChangeNodeChildsRuntime_3_01T__Tree_12068393b0afc588a197e0c682762ac3_1a104d52b220630f00aa1973a758dd4173" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto llama::mapping::tree::operations::internal::ChangeNodeChildsRuntime&lt; T_Tree, T_Operation, T_TreeCoord, typename T_Tree::IsTreeElementWithChilds &gt;::operator()</definition>
        <argsstring>(T_Tree const &amp;tree, std::size_t const newValue) const -&gt; ResultType</argsstring>
        <name>operator()</name>
        <param>
          <type>T_Tree const &amp;</type>
          <declname>tree</declname>
        </param>
        <param>
          <type>std::size_t const</type>
          <declname>newValue</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexander/develop/work/llama/include/llama/mapping/tree/operations/ChangeNodeRuntime.hpp" line="235" column="1" bodyfile="/home/alexander/develop/work/llama/include/llama/mapping/tree/operations/ChangeNodeRuntime.hpp" bodystart="235" bodyend="262"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/alexander/develop/work/llama/include/llama/mapping/tree/operations/ChangeNodeRuntime.hpp" line="208" column="1" bodyfile="/home/alexander/develop/work/llama/include/llama/mapping/tree/operations/ChangeNodeRuntime.hpp" bodystart="202" bodyend="263"/>
    <listofallmembers>
      <member refid="structllama_1_1mapping_1_1tree_1_1operations_1_1internal_1_1ChangeNodeChildsRuntime_3_01T__Tree_12068393b0afc588a197e0c682762ac3_1a104d52b220630f00aa1973a758dd4173" prot="public" virt="non-virtual"><scope>llama::mapping::tree::operations::internal::ChangeNodeChildsRuntime&lt; T_Tree, T_Operation, T_TreeCoord, typename T_Tree::IsTreeElementWithChilds &gt;</scope><name>operator()</name></member>
      <member refid="structllama_1_1mapping_1_1tree_1_1operations_1_1internal_1_1ChangeNodeChildsRuntime_3_01T__Tree_12068393b0afc588a197e0c682762ac3_1a822beeeec49d6dc35614770108172d11" prot="public" virt="non-virtual"><scope>llama::mapping::tree::operations::internal::ChangeNodeChildsRuntime&lt; T_Tree, T_Operation, T_TreeCoord, typename T_Tree::IsTreeElementWithChilds &gt;</scope><name>ResultType</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
