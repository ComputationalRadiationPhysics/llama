<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structllama_1_1mapping_1_1tree_1_1operations_1_1internal_1_1ChangeNodeRuntime" kind="struct" language="C++" prot="public">
    <compoundname>llama::mapping::tree::operations::internal::ChangeNodeRuntime</compoundname>
    <includes refid="ChangeNodeRuntime_8hpp" local="no">ChangeNodeRuntime.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename T_Tree</type>
      </param>
      <param>
        <type>typename T_TreeCoord</type>
      </param>
      <param>
        <type>typename T_SFINAE</type>
        <defval>void</defval>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structllama_1_1mapping_1_1tree_1_1operations_1_1internal_1_1ChangeNodeRuntime_1ad31abb45caafa22ec594a368c7b242fe" prot="public" static="no">
        <type>decltype(<ref refid="namespacellama_1af366894d19a93f206cac71e5e6ca7a8d" kindref="member">tupleReplace</ref>&lt; T_TreeCoord::FirstElement::compiletime &gt;(T_Tree().childs, <ref refid="structllama_1_1mapping_1_1tree_1_1operations_1_1internal_1_1ChangeNodeRuntime" kindref="compound">ChangeNodeRuntime</ref>&lt; <ref refid="namespacellama_1aa3255f46d3b3fbcd50ca0d002dfc279c" kindref="member">GetTupleType</ref>&lt; typename T_Tree::Type, T_TreeCoord::FirstElement::compiletime &gt;, typename T_TreeCoord::RestTuple &gt;()(<ref refid="namespacellama_1a06631de361c03d428287f53c817c880d" kindref="member">getTupleElement</ref>&lt; T_TreeCoord::FirstElement::compiletime &gt;(T_Tree().childs), 0)))</type>
        <definition>using llama::mapping::tree::operations::internal::ChangeNodeRuntime&lt; T_Tree, T_TreeCoord, T_SFINAE &gt;::ResultChilds =  decltype( tupleReplace&lt; T_TreeCoord::FirstElement::compiletime &gt;( T_Tree().childs, ChangeNodeRuntime&lt; GetTupleType&lt; typename T_Tree::Type, T_TreeCoord::FirstElement::compiletime &gt;, typename T_TreeCoord::RestTuple &gt;()( getTupleElement&lt; T_TreeCoord::FirstElement::compiletime &gt; ( T_Tree().childs ), 0 ) ) )</definition>
        <argsstring></argsstring>
        <name>ResultChilds</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexander/develop/work/llama/include/llama/mapping/tree/operations/ChangeNodeRuntime.hpp" line="47" column="1" bodyfile="/home/alexander/develop/work/llama/include/llama/mapping/tree/operations/ChangeNodeRuntime.hpp" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structllama_1_1mapping_1_1tree_1_1operations_1_1internal_1_1ChangeNodeRuntime_1aa8881505e160095bf15370047e3ab76a" prot="public" static="no">
        <type><ref refid="structllama_1_1mapping_1_1tree_1_1TreeElement" kindref="compound">TreeElement</ref>&lt; typename T_Tree::Identifier, <ref refid="structllama_1_1mapping_1_1tree_1_1operations_1_1internal_1_1ChangeNodeRuntime_1ad31abb45caafa22ec594a368c7b242fe" kindref="member">ResultChilds</ref> &gt;</type>
        <definition>using llama::mapping::tree::operations::internal::ChangeNodeRuntime&lt; T_Tree, T_TreeCoord, T_SFINAE &gt;::ResultTree =  TreeElement&lt; typename T_Tree::Identifier, ResultChilds &gt;</definition>
        <argsstring></argsstring>
        <name>ResultTree</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexander/develop/work/llama/include/llama/mapping/tree/operations/ChangeNodeRuntime.hpp" line="66" column="1" bodyfile="/home/alexander/develop/work/llama/include/llama/mapping/tree/operations/ChangeNodeRuntime.hpp" bodystart="69" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structllama_1_1mapping_1_1tree_1_1operations_1_1internal_1_1ChangeNodeRuntime_1aa9fa5a5dcf1e11c1aea934cf1224c56a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto llama::mapping::tree::operations::internal::ChangeNodeRuntime&lt; T_Tree, T_TreeCoord, T_SFINAE &gt;::operator()</definition>
        <argsstring>(T_Tree const &amp;tree, std::size_t const newValue) const -&gt; ResultTree</argsstring>
        <name>operator()</name>
        <param>
          <type>T_Tree const &amp;</type>
          <declname>tree</declname>
        </param>
        <param>
          <type>std::size_t const</type>
          <declname>newValue</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexander/develop/work/llama/include/llama/mapping/tree/operations/ChangeNodeRuntime.hpp" line="73" column="1" bodyfile="/home/alexander/develop/work/llama/include/llama/mapping/tree/operations/ChangeNodeRuntime.hpp" bodystart="73" bodyend="99"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/alexander/develop/work/llama/include/llama/mapping/tree/operations/ChangeNodeRuntime.hpp" line="46" column="1" bodyfile="/home/alexander/develop/work/llama/include/llama/mapping/tree/operations/ChangeNodeRuntime.hpp" bodystart="45" bodyend="100"/>
    <listofallmembers>
      <member refid="structllama_1_1mapping_1_1tree_1_1operations_1_1internal_1_1ChangeNodeRuntime_1aa9fa5a5dcf1e11c1aea934cf1224c56a" prot="public" virt="non-virtual"><scope>llama::mapping::tree::operations::internal::ChangeNodeRuntime</scope><name>operator()</name></member>
      <member refid="structllama_1_1mapping_1_1tree_1_1operations_1_1internal_1_1ChangeNodeRuntime_1ad31abb45caafa22ec594a368c7b242fe" prot="public" virt="non-virtual"><scope>llama::mapping::tree::operations::internal::ChangeNodeRuntime</scope><name>ResultChilds</name></member>
      <member refid="structllama_1_1mapping_1_1tree_1_1operations_1_1internal_1_1ChangeNodeRuntime_1aa8881505e160095bf15370047e3ab76a" prot="public" virt="non-virtual"><scope>llama::mapping::tree::operations::internal::ChangeNodeRuntime</scope><name>ResultTree</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
